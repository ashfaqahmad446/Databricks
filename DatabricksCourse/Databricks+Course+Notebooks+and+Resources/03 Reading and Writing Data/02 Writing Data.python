{"version":"NotebookV1","origId":3603969348519656,"name":"02 Writing Data","language":"python","commands":[{"version":"CommandV1","origId":3603969348519657,"guid":"49a4728e-0f19-4b14-9075-2774f9d96221","subtype":"command","commandType":"auto","position":0.5,"command":"%md\n# Writing Data\n\n#### Resources\n* https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/io.html\n* https://spark.apache.org/docs/latest/sql-data-sources-csv.html#data-source-option","commandVersion":17,"state":"input","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"3d1cb98a-524c-4497-a27a-d6576460ffd7"},{"version":"CommandV1","origId":3603969348519658,"guid":"d72c346b-e11f-41d7-85db-a5e8efe00435","subtype":"command","commandType":"auto","position":1.0,"command":"# Defining the schema and importing Types \nfrom pyspark.sql.types import IntegerType, StringType, DoubleType, StructField, StructType\ncountries_schema = StructType([\n                    StructField(\"COUNTRY_ID\", IntegerType(), False),\n                    StructField(\"NAME\", StringType(), False),\n                    StructField(\"NATIONALITY\", StringType(), False),\n                    StructField(\"COUNTRY_CODE\", StringType(), False),\n                    StructField(\"ISO_ALPHA2\", StringType(), False),\n                    StructField(\"CAPITAL\", StringType(), False),\n                    StructField(\"POPULATION\", DoubleType(), False),\n                    StructField(\"AREA_KM2\", IntegerType(), False),\n                    StructField(\"REGION_ID\", IntegerType(), True),\n                    StructField(\"SUB_REGION_ID\", IntegerType(), True),\n                    StructField(\"INTERMEDIATE_REGION_ID\", IntegerType(), True),\n                    StructField(\"ORGANIZATION_REGION_ID\", IntegerType(), True)\n                    ]\n                    )","commandVersion":14,"state":"finished","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755185744,"submitTime":1663755185685,"finishTime":1663755185772,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"6e56468a-f51e-4994-a92a-7744239c5516"},{"version":"CommandV1","origId":3603969348519659,"guid":"f7388463-b5b7-4c29-97ee-a491b70697d4","subtype":"command","commandType":"auto","position":2.0,"command":"# Reading in the countries.csv file\ncountries_df = spark.read.csv('/FileStore/tables/countries.csv', header=True, schema=countries_schema)","commandVersion":11,"state":"finished","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"countries_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"COUNTRY_ID","nullable":true,"type":"integer"},{"metadata":{},"name":"NAME","nullable":true,"type":"string"},{"metadata":{},"name":"NATIONALITY","nullable":true,"type":"string"},{"metadata":{},"name":"COUNTRY_CODE","nullable":true,"type":"string"},{"metadata":{},"name":"ISO_ALPHA2","nullable":true,"type":"string"},{"metadata":{},"name":"CAPITAL","nullable":true,"type":"string"},{"metadata":{},"name":"POPULATION","nullable":true,"type":"double"},{"metadata":{},"name":"AREA_KM2","nullable":true,"type":"integer"},{"metadata":{},"name":"REGION_ID","nullable":true,"type":"integer"},{"metadata":{},"name":"SUB_REGION_ID","nullable":true,"type":"integer"},{"metadata":{},"name":"INTERMEDIATE_REGION_ID","nullable":true,"type":"integer"},{"metadata":{},"name":"ORGANIZATION_REGION_ID","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755205521,"submitTime":1663755205488,"finishTime":1663755205631,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"d3c6d79f-79e9-4a18-bca7-857e242ad0f2"},{"version":"CommandV1","origId":3603969348519660,"guid":"86904441-0f11-4117-abef-7835336c9987","subtype":"command","commandType":"auto","position":3.0,"command":"display(countries_df)","commandVersion":3,"state":"finished","results":{"type":"listResults","data":[{"type":"table","data":[[1,"Afghanistan","Afghan","AFG","AF","Kabul",3.8041754E7,652230,30,30,null,30],[2,"Albania","Albanian","ALB","AL","Tirana",2880917.0,28748,20,70,null,20],[3,"Algeria","Algerian","DZA","DZ","Algiers",4.3053054E7,2381741,50,40,null,20],[4,"American Samoa","American Samoan","ASM","AS","Pago Pago",55312.0,199,40,20,null,30],[5,"Andorra","Andorran","AND","AD","Andorra la Vella",77142.0,468,20,70,null,20],[6,"Angola","Angolan","AGO","AO","Luanda",3.1825295E7,1246700,50,160,80,20],[7,"Anguilla","Anguillan","AIA","AI","The Valley",14869.0,91,10,10,60,40],[8,"Antarctica","Antarctic","ATA","AQ","McMurdo Station",1106.0,14200000,40,null,null,30],[9,"Antigua and Barbuda","Antiguan or Barbudan","ATG","AG","St. John's",97118.0,442,10,10,60,40],[10,"Argentina","Argentine","ARG","AR","Buenos Aires",4.4780677E7,2780400,10,10,40,40],[11,"Armenia","Armenian","ARM","AM","Yerevan",2957731.0,29743,30,170,null,30],[12,"Aruba","Aruban","ABW","AW","Oranjestad",106314.0,180,10,10,60,40],[13,"Australia","Australian","AUS","AU","Canberra",2.5203198E7,7692024,40,90,null,30],[14,"Austria","Austrian","AUT","AT","Vienna",8955102.0,83871,20,150,null,20],[15,"Azerbaijan","Azerbaijani","AZE","AZ","Baku",1.0047718E7,86600,30,170,null,30],[16,"Bahamas","Bahamian","BHS","BS","Nassau",389482.0,13943,10,10,60,40],[17,"Bahrain","Bahraini","BHR","BH","Manama",1641172.0,765,30,170,null,30],[18,"Bangladesh","Bangladeshi","BGD","BD","Dhaka",1.63046161E8,147570,30,30,null,30],[19,"Barbados","Barbadian","BRB","BB","Bridgetown",287025.0,430,10,10,60,40],[20,"Belarus","Belarusian","BLR","BY","Minsk",9452411.0,207600,20,140,null,20],[21,"Belgium","Belgian","BEL","BE","Brussels",1.1539328E7,30528,20,150,null,20],[22,"Belize","Belizean","BLZ","BZ","Belmopan",390353.0,22966,10,10,20,40],[23,"Benin","Beninese","BEN","BJ","Porto-Novo",1.1801151E7,112622,50,160,10,20],[24,"Bermuda","Bermudian","BMU","BM","Hamilton",62506.0,54,10,80,null,40],[25,"Bhutan","Bhutanese","BTN","BT","Thimphu",763092.0,38394,30,30,null,30],[26,"Bolivia (Plurinational State of)","Bolivian","BOL","BO","Sucre",1.15131E7,1098581,10,10,40,40],[27,"Bonaire, Sint Eustatius and Saba","Sint Eustatius and Saba","BES","BQ","Kralendijk",25711.0,328,10,10,null,40],[28,"Bosnia and Herzegovina","Bosnian or Herzegovinian","BIH","BA","Sarajevo",3301000.0,51209,20,70,null,20],[29,"Botswana","Motswana","BWA","BW","Gaborone",2303697.0,582000,50,160,30,20],[30,"Bouvet Island","Bouvet Island","BVT","BV",null,0.0,49,10,10,40,40],[31,"Brazil","Brazilian","BRA","BR","Bras�lia",2.11049527E8,8515767,10,10,40,40],[32,"British Indian Ocean Territory","BIOT","IOT","IO","Point Marianne",4000.0,60,50,160,50,20],[33,"Brunei Darussalam","Bruneian","BRN","BN","Bandar Seri Begawan",433285.0,5765,30,100,null,30],[34,"Bulgaria","Bulgarian","BGR","BG","Sofia",7000119.0,110879,20,140,null,20],[35,"Burkina Faso","Burkinab�","BFA","BF","Ouagadougou",2.0321378E7,272967,50,160,10,20],[36,"Burundi","Burundian","BDI","BI","Bujumbura",1.153058E7,27834,50,160,50,20],[37,"Cabo Verde","Cabo Verdean","CPV","CV","Praia",549935.0,4033,50,160,10,20],[38,"Cambodia","Cambodian","KHM","KH","Phnom Penh",1.6486542E7,181035,30,100,null,30],[39,"Cameroon","Cameroonian","CMR","CM","Yaound�",2.587638E7,475442,50,160,80,20],[40,"Canada","Canadian","CAN","CA","Ottawa",3.7411047E7,9984670,10,80,null,10],[41,"Cayman Islands","Caymanian","CYM","KY","George Town",64948.0,264,10,10,60,40],[42,"Central African Republic","Central African","CAF","CF","Bangui",4745185.0,622984,50,160,80,20],[43,"Chad","Chadian","TCD","TD","N'Djamena",1.5946876E7,1284000,50,160,80,20],[44,"Chile","Chilean","CHL","CL","Santiago",1.8952038E7,756102,10,10,40,40],[45,"China","Chinese","CHN","CN","Beijing",1.433783686E9,9706961,30,60,null,30],[46,"Christmas Island","Christmas Island","CXR","CX","Flying Fish Cove",1843.0,135,40,90,null,30],[47,"Cocos (Keeling) Islands","Cocos Island","CCK","CC","West Island",544.0,14,40,90,null,30],[48,"Colombia","Colombian","COL","CO","Bogota",5.0339443E7,1141748,10,10,40,40],[49,"Comoros","Comoran","COM","KM","Moroni",850886.0,1862,50,160,50,20],[50,"Congo","Congolese","COG","CG","Brazzaville",5380508.0,342000,50,160,80,20],[51,"Congo, Democratic Republic of the","Congolese","COD","CD","Kinshasa",8.6790567E7,2344858,50,160,null,20],[52,"Cook Islands","Cook Island","COK","CK","Avarua",17548.0,236,40,20,null,30],[53,"Costa Rica","Costa Rican","CRI","CR","San Jos�",5047561.0,51100,10,10,20,40],[54,"Croatia","Croatian","HRV","HR","Zagreb",4130304.0,56594,20,70,null,20],[55,"Cuba","Cuban","CUB","CU","Havana",1.1333483E7,109884,10,10,60,40],[56,"Cura�ao","Cura�aoan","CUW","CW","Willemstad",163424.0,444,10,10,60,40],[57,"Cyprus","Cypriot","CYP","CY","Nicosia",1198575.0,9251,30,170,null,30],[58,"Czechia","Czech","CZE","CZ","Prague",1.0689209E7,78865,20,140,null,20],[59,"C�te d'Ivoire","Ivorian","CIV","CI","Yamoussoukro",2.5716544E7,322463,50,160,10,20],[60,"Denmark","Danish","DNK","DK","Copenhagen",5771876.0,43094,20,120,null,20],[61,"Djibouti","Djiboutian","DJI","DJ","Djibouti",973560.0,23200,50,160,50,20],[62,"Dominica","Dominican","DMA","DM","Roseau",71808.0,751,10,10,60,40],[63,"Dominican Republic","Dominican","DOM","DO","Santo Domingo",1.0738958E7,48671,10,10,60,40],[64,"Ecuador","Ecuadorian","ECU","EC","Quito",1.7373662E7,276841,10,10,40,40],[65,"Egypt","Egyptian","EGY","EG","Cairo",1.00388073E8,1002450,50,40,null,20],[66,"El Salvador","Salvadoran","SLV","SV","San Salvador",6453553.0,21041,10,10,20,40],[67,"Equatorial Guinea","Equatorial Guinean","GNQ","GQ","Malabo",1355986.0,28051,50,160,80,20],[68,"Eritrea","Eritrean","ERI","ER","Asmara",3497117.0,117600,50,160,50,20],[69,"Estonia","Estonian","EST","EE","Tallinn",1325648.0,45227,20,120,null,20],[70,"Eswatini","Swazi","SWZ","SZ","Mbabane",1148130.0,17364,50,160,30,20],[71,"Ethiopia","Ethiopian","ETH","ET","Addis Ababa",1.1207873E8,1104300,50,160,50,20],[72,"Falkland Islands (Malvinas)","Falkland Island","FLK","FK","Stanley",3377.0,12173,10,10,40,40],[73,"Faroe Islands","Faroese","FRO","FO","T�rshavn",48678.0,1393,20,120,null,20],[74,"Fiji","Fijian","FJI","FJ","Suva",889953.0,18272,40,130,null,30],[75,"Finland","Finnish","FIN","FI","Helsinki",5532156.0,338424,20,120,null,20],[76,"France","French","FRA","FR","Paris",6.5129728E7,551695,20,150,null,20],[77,"French Guiana","French Guianese","GUF","GF","Cayenne",290832.0,83534,10,10,40,40],[78,"French Polynesia","French Polynesian","PYF","PF","Papeete",279287.0,4167,40,20,null,30],[79,"French Southern Territories","French Southern Territories","ATF","TF","Saint Pierre",150.0,439780,50,160,50,20],[80,"Gabon","Gabonese","GAB","GA","Libreville",2172579.0,267668,50,160,80,20],[81,"Gambia","Gambian","GMB","GM","Banjul",2347706.0,10689,50,160,10,20],[82,"Georgia","Georgian","GEO","GE","Tbilisi",3996765.0,69700,30,170,null,30],[83,"Germany","German","DEU","DE","Berlin",8.3517045E7,357114,20,150,null,20],[84,"Ghana","Ghanaian","GHA","GH","Accra",3.0417856E7,238533,50,160,10,20],[85,"Gibraltar","Gibraltar","GIB","GI","Gibraltar",33701.0,6,20,70,null,20],[86,"Greece","Greek","GRC","GR","Athens",1.0473455E7,131990,20,70,null,20],[87,"Greenland","Greenlandic","GRL","GL","Nuuk",56672.0,2166086,10,80,null,20],[88,"Grenada","Grenadian","GRD","GD","St. George's",112003.0,344,10,10,60,40],[89,"Guadeloupe","Guadeloupe","GLP","GP","Basse Terre",400056.0,1628,10,10,60,40],[90,"Guam","Guamanian","GUM","GU","Hag�t�a",167294.0,549,40,50,null,30],[91,"Guatemala","Guatemalan","GTM","GT","Guatemala City",1.7581472E7,108889,10,10,20,40],[92,"Guernsey","Channel Island","GGY","GG","St. Peter Port",63026.0,65,20,120,70,20],[93,"Guinea","Guinean","GIN","GN","Conakry",1.2771246E7,245857,50,160,10,20],[94,"Guinea-Bissau","Bissau-Guinean","GNB","GW","Bissau",1920922.0,36125,50,160,10,20],[95,"Guyana","Guyanese","GUY","GY","Georgetown",782766.0,214969,10,10,40,40],[96,"Haiti","Haitian","HTI","HT","Port-au-Prince",1.1263077E7,27750,10,10,60,40],[97,"Heard Island and McDonald Islands","Heard Island or McDonald Islands","HMD","HM",null,0.0,368,40,90,null,30],[98,"Holy See","Vatican","VAT","VA","Vatican City",799.0,null,20,70,null,20],[99,"Honduras","Honduran","HND","HN","Tegucigalpa",9746117.0,112492,10,10,20,40],[100,"Hong Kong","Hong Kong","HKG","HK","City of Victoria",7436154.0,1104,30,60,null,30],[101,"Hungary","Hungarian","HUN","HU","Budapest",9684679.0,93028,20,140,null,20],[102,"Iceland","Icelandic","ISL","IS","Reykjav�k",339031.0,103000,20,120,null,20],[103,"India","Indian","IND","IN","New Delhi",1.366417754E9,3287590,30,30,null,30],[104,"Indonesia","Indonesian","IDN","ID","Jakarta",2.70625568E8,1904569,30,100,null,30],[105,"Iran (Islamic Republic of)","Iranian","IRN","IR","Tehran",8.2913906E7,1648195,30,30,null,30],[106,"Iraq","Iraqi","IRQ","IQ","Baghdad",3.9309783E7,438317,30,170,null,30],[107,"Ireland","Irish","IRL","IE","Dublin",4882495.0,70273,20,120,null,20],[108,"Isle of Man","Manx","IMN","IM","Douglas",84584.0,572,20,120,null,20],[109,"Israel","Israeli","ISR","IL","Jerusalem",8519377.0,20770,30,170,null,30],[110,"Italy","Italian","ITA","IT","Rome",6.0550075E7,301336,20,70,null,20],[111,"Jamaica","Jamaican","JAM","JM","Kingston",2948279.0,10991,10,10,60,40],[112,"Japan","Japanese","JPN","JP","Tokyo",1.26860301E8,377930,30,60,null,30],[113,"Jersey","Channel Island","JEY","JE","St. Helier",100000.0,120,20,120,70,20],[114,"Jordan","Jordanian","JOR","JO","Amman",1.0101694E7,89342,30,170,null,30],[115,"Kazakhstan","Kazakhstani","KAZ","KZ","Astana",1.8551427E7,2724900,30,110,null,30],[116,"Kenya","Kenyan","KEN","KE","Nairobi",5.2573973E7,580367,50,160,50,20],[117,"Kiribati","I-Kiribati","KIR","KI","Tarawa",117606.0,811,40,50,null,30],[118,"Kuwait","Kuwaiti","KWT","KW","Kuwait City",4207083.0,17818,30,170,null,30],[119,"Kyrgyzstan","Kyrgyzstani","KGZ","KG","Bishkek",6415850.0,199951,30,110,null,30],[120,"Laos, People's Democratic Republic","Lao","LAO","LA","Vientiane",7169455.0,236800,30,100,null,30],[121,"Latvia","Latvian","LVA","LV","Riga",1906743.0,64559,20,120,null,20],[122,"Lebanon","Lebanese","LBN","LB","Beirut",6855713.0,10452,30,170,null,30],[123,"Lesotho","Basotho","LSO","LS","Maseru",2125268.0,30355,50,160,30,20],[124,"Liberia","Liberian","LBR","LR","Monrovia",4937374.0,111369,50,160,10,20],[125,"Libya","Libyan","LBY","LY","Tripoli",6777452.0,1759540,50,40,null,20],[126,"Liechtenstein","Liechtenstein","LIE","LI","Vaduz",38019.0,160,20,150,null,20],[127,"Lithuania","Lithuanian","LTU","LT","Vilnius",2759627.0,65300,20,120,null,20],[128,"Luxembourg","Luxembourg","LUX","LU","Luxembourg",615729.0,2586,20,150,null,20],[129,"Macau","Macanese","MAC","MO","Macao",640445.0,30,30,60,null,30],[130,"Madagascar","Malagasy","MDG","MG","Antananarivo",2.6969307E7,587041,50,160,50,20],[131,"Malawi","Malawian","MWI","MW","Lilongwe",1.8628747E7,118484,50,160,50,20],[132,"Malaysia","Malaysian","MYS","MY","Kuala Lumpur",3.1949777E7,330803,30,100,null,30],[133,"Maldives","Maldivian","MDV","MV","Mal�",530953.0,300,30,30,null,30],[134,"Mali","Malian","MLI","ML","Bamako",1.9658031E7,1240192,50,160,10,20],[135,"Malta","Maltese","MLT","MT","Valletta",440372.0,316,20,70,null,20],[136,"Marshall Islands","Marshallese","MHL","MH","Majuro",58791.0,181,40,50,null,30],[137,"Martinique","Martiniquais","MTQ","MQ","Fort-de-France Bay",375554.0,1128,10,10,60,40],[138,"Mauritania","Mauritanian","MRT","MR","Nouakchott",4525696.0,1030700,50,160,10,20],[139,"Mauritius","Mauritian","MUS","MU","Port Louis",1269668.0,2040,50,160,50,20],[140,"Mayotte","Mahoran","MYT","YT","Mamoudzou",266150.0,374,50,160,50,20],[141,"Mexico","Mexican","MEX","MX","Mexico City",1.27575529E8,1964375,10,10,20,40],[142,"Micronesia (Federated States of)","Micronesian","FSM","FM","Palikir",113815.0,702,40,50,null,30],[143,"Moldova, Republic of","Moldovan","MDA","MD","Chisinau",4043263.0,33846,20,140,null,20],[144,"Monaco","Mon�gasque","MCO","MC","Monaco",38964.0,null,20,150,null,20],[145,"Mongolia","Mongolian","MNG","MN","Ulaanbaatar",3225167.0,1564110,30,60,null,30],[146,"Montenegro","Montenegrin","MNE","ME","Podgorica",627987.0,13812,20,70,null,20],[147,"Montserrat","Montserratian","MSR","MS","Plymouth",4989.0,102,10,10,60,40],[148,"Morocco","Moroccan","MAR","MA","Rabat",3.6471769E7,446550,50,40,null,20],[149,"Mozambique","Mozambican","MOZ","MZ","Maputo",3.0366036E7,801590,50,160,50,20],[150,"Myanmar","Burmese","MMR","MM","Naypyidaw",5.404542E7,676578,30,100,null,30],[151,"Namibia","Namibian","NAM","NA","Windhoek",2494530.0,825615,50,160,30,20],[152,"Nauru","Nauruan","NRU","NR","Yaren",10756.0,21,40,50,null,30],[153,"Nepal","Nepali","NPL","NP","Kathmandu",2.860871E7,147181,30,30,null,30],[154,"Netherlands","Dutch","NLD","NL","Amsterdam",1.709713E7,41850,20,150,null,20],[155,"New Caledonia","New Caledonian","NCL","NC","Noum�a",282750.0,18575,40,130,null,30],[156,"New Zealand","New Zealander","NZL","NZ","Wellington",4783063.0,270467,40,90,null,30],[157,"Nicaragua","Nicaraguan","NIC","NI","Managua",6545502.0,130373,10,10,20,40],[158,"Niger","Nigerien","NER","NE","Niamey",2.3310715E7,1267000,50,160,10,20],[159,"Nigeria","Nigerian","NGA","NG","Abuja",2.00963599E8,923768,50,160,10,20],[160,"Niue","Niuean","NIU","NU","Alofi",1615.0,260,40,20,null,30],[161,"Norfolk Island","Norfolk Island","NFK","NF","Kingston",1748.0,35,40,90,null,30],[162,"North Korea (Democratic People's Republic of)","North Korean","PRK","KP","Pyongyang",2.5666161E7,120538,30,60,null,30],[163,"North Macedonia","Macedonian","MKD","MK","Skopje",2083459.0,25713,20,70,null,20],[164,"Northern Mariana Islands","Northern Marianan","MNP","MP","Saipan",57216.0,464,40,50,null,30],[165,"Norway","Norwegian","NOR","NO","Oslo",5378857.0,323802,20,120,null,20],[166,"Oman","Omani","OMN","OM","Muscat",4974986.0,309500,30,170,null,30],[167,"Pakistan","Pakistani","PAK","PK","Islamabad",2.16565318E8,881912,30,30,null,30],[168,"Palau","Palauan","PLW","PW","Ngerulmud",18008.0,459,40,50,null,30],[169,"Palestine, State of","Palestinian","PSE","PS","Ramallah",4981420.0,6220,30,170,null,30],[170,"Panama","Panamanian","PAN","PA","Panama City",4246439.0,75417,10,10,20,40],[171,"Papua New Guinea","Papua New Guinean","PNG","PG","Port Moresby",8776109.0,462840,40,130,null,30],[172,"Paraguay","Paraguayan","PRY","PY","Asunci�n",7044636.0,406752,10,10,40,40],[173,"Peru","Peruvian","PER","PE","Lima",3.2510453E7,1285216,10,10,40,40],[174,"Philippines","Filipino","PHL","PH","Manila",1.08116615E8,342353,30,100,null,30],[175,"Pitcairn","Pitcairn Island","PCN","PN","Adamstown",68.0,43,40,20,null,30],[176,"Poland","Polish","POL","PL","Warsaw",3.7887768E7,312679,20,140,null,20],[177,"Portugal","Portuguese","PRT","PT","Lisbon",1.0226187E7,92090,20,70,null,20],[178,"Puerto Rico","Puerto Rican","PRI","PR","San Juan",2933408.0,8870,10,10,60,40],[179,"Qatar","Qatari","QAT","QA","Doha",2832067.0,11586,30,170,null,30],[180,"Romania","Romanian","ROU","RO","Bucharest",1.9364557E7,238391,20,140,null,20],[181,"Russian Federation","Russian","RUS","RU","Moscow",1.45872256E8,17098242,20,140,null,20],[182,"Rwanda","Rwandan","RWA","RW","Kigali",1.262695E7,26338,50,160,50,20],[183,"R�union","R�unionese","REU","RE","Saint-Denis",888927.0,2511,50,160,50,20],[184,"Saint Barth�lemy","Barth�lemois","BLM","BL","Gustavia",9847.0,21,10,10,60,40],[185,"Saint Helena, Ascension and Tristan da Cunha","Ascension and Tristan da Cunha","SHN","SH","Jamestown",5633.0,394,50,160,null,20],[186,"Saint Kitts and Nevis","Kittitian or Nevisian","KNA","KN","Basseterre",52823.0,261,10,10,60,40],[187,"Saint Lucia","Saint Lucian","LCA","LC","Castries",182790.0,616,10,10,60,40],[188,"Saint Martin (French part)","Saint-Martinoise","MAF","MF","Marigot",38002.0,53,10,10,60,40],[189,"Saint Pierre and Miquelon","Saint-Pierrais or Miquelonnais","SPM","PM","St. Pierre",5822.0,242,10,80,null,40],[190,"Saint Vincent and the Grenadines","Saint Vincentian","VCT","VC","Kingstown",110589.0,389,10,10,60,40],[191,"Samoa","Samoan","WSM","WS","Apia",197097.0,2842,40,20,null,30],[192,"San Marino","Sammarinese","SMR","SM","San Marino",33860.0,61,20,70,null,20],[193,"Sao Tome and Principe","S�o Tom�an","STP","ST","Sao Tome",215056.0,964,50,160,80,20],[194,"Saudi Arabia","Saudi","SAU","SA","Riyadh",3.4268528E7,2149690,30,170,null,30],[195,"Senegal","Senegalese","SEN","SN","Dakar",1.6296364E7,196722,50,160,10,20],[196,"Serbia","Serbian","SRB","RS","Belgrade",8772235.0,88361,20,70,null,20],[197,"Seychelles","Seychellois","SYC","SC","Victoria",97739.0,452,50,160,50,20],[198,"Sierra Leone","Sierra Leonean","SLE","SL","Freetown",7813215.0,71740,50,160,10,20],[199,"Singapore","Singaporean","SGP","SG","Singapore",5804337.0,710,30,100,null,30],[200,"Sint Maarten (Dutch part)","Sint Maarten","SXM","SX","Philipsburg",42388.0,34,10,10,60,40],[201,"Slovakia","Slovak","SVK","SK","Bratislava",5457013.0,49037,20,140,null,20],[202,"Slovenia","Slovenian","SVN","SI","Ljubljana",2078654.0,20273,20,70,null,20],[203,"Solomon Islands","Solomon Island","SLB","SB","Honiara",669823.0,28896,40,130,null,30],[204,"Somalia","Somali","SOM","SO","Mogadishu",1.5442905E7,637657,50,160,50,20],[205,"South Africa","South African","ZAF","ZA","Pretoria",5.855827E7,1221037,50,160,30,20],[206,"South Georgia and the South Sandwich Islands","South Georgia or South Sandwich Islands","SGS","GS","Grytviken",30.0,3903,10,10,40,40],[207,"South Korea (Republic of)","South Korean","KOR","KR","Seoul",5.1225308E7,100210,30,60,null,30],[208,"South Sudan","South Sudanese","SSD","SS","Juba",1.1062113E7,619745,50,160,50,20],[209,"Spain","Spanish","ESP","ES","Madrid",4.6736776E7,505992,20,70,null,20],[210,"Sri Lanka","Sri Lankan","LKA","LK","Sri Jayawardenapura Kotte",2.1323733E7,65610,30,30,null,30],[211,"Sudan","Sudanese","SDN","SD","Khartoum",4.2813238E7,1886068,50,40,null,20],[212,"Suriname","Surinamese","SUR","SR","Paramaribo",581372.0,163820,10,10,40,40],[213,"Svalbard and Jan Mayen","Svalbard","SJM","SJ","Longyearbyen",2667.0,61399,20,120,null,20],[214,"Sweden","Swedish","SWE","SE","Stockholm",1.0036379E7,450295,20,120,null,20],[215,"Switzerland","Swiss","CHE","CH","Bern",8591365.0,41284,20,150,null,20],[216,"Syrian Arab Republic","Syrian","SYR","SY","Damascus",1.7070135E7,185180,30,170,null,30],[217,"Taiwan (Province of China)","Taiwanese","TWN","TW","Taipei",2.3773876E7,36193,30,60,null,30],[218,"Tajikistan","Tajikistani","TJK","TJ","Dushanbe",9321018.0,143100,30,110,null,30],[219,"Tanzania (United Republic of)","Tanzanian","TZA","TZ","Dodoma",5.8005463E7,945087,50,160,null,20],[220,"Thailand","Thai","THA","TH","Bangkok",6.9625582E7,513120,30,100,null,30],[221,"Timor-Leste","Timorese","TLS","TL","Dili",1293119.0,14874,30,100,null,30],[222,"Togo","Togolese","TGO","TG","Lom�",8082366.0,56785,50,160,10,20],[223,"Tokelau","Tokelauan","TKL","TK","Nukunonu",1340.0,12,40,20,null,30],[224,"Tonga","Tongan","TON","TO","Nuku�alofa",104494.0,747,40,20,null,30],[225,"Trinidad and Tobago","Trinidadian or Tobagonian","TTO","TT","Port of Spain",1394973.0,5130,10,10,60,40],[226,"Tunisia","Tunisian","TUN","TN","Tunis",1.1694719E7,163610,50,40,null,20],[227,"Turkey","Turkish","TUR","TR","Ankara",8.3429615E7,783562,30,170,null,30],[228,"Turkmenistan","Turkmen","TKM","TM","Ashgabat",5942089.0,488100,30,110,null,30],[229,"Turks and Caicos Islands","Turks and Caicos Island","TCA","TC","Cockburn Town",38191.0,948,10,10,60,40],[230,"Tuvalu","Tuvaluan","TUV","TV","Funafuti",11646.0,26,40,20,null,30],[231,"Uganda","Ugandan","UGA","UG","Kampala",4.4269594E7,241550,50,160,50,20],[232,"Ukraine","Ukrainian","UKR","UA","Kiev",4.3993638E7,603500,20,140,null,20],[233,"United Arab Emirates","Emirati","ARE","AE","Abu Dhabi",9770529.0,83600,30,170,null,30],[234,"United Kingdom of Great Britain and Northern Ireland","British","GBR","GB","London",6.7530172E7,242900,20,120,null,20],[235,"United States Minor Outlying Islands","American","UMI","UM",null,300.0,34,40,50,null,30],[236,"United States of America","American","USA","US","Washington, D.C.",3.29064917E8,9372610,10,80,null,10],[237,"Uruguay","Uruguayan","URY","UY","Montevideo",3461734.0,181034,10,10,40,40],[238,"Uzbekistan","Uzbekistani","UZB","UZ","Tashkent",3.2981716E7,447400,30,110,null,30],[239,"Vanuatu","Ni-Vanuatu","VUT","VU","Port Vila",299882.0,12189,40,130,null,30],[240,"Venezuela (Bolivarian Republic of)","Venezuelan","VEN","VE","Caracas",2.8515829E7,916445,10,10,40,40],[241,"Vietnam","Vietnamese","VNM","VN","Hanoi",9.6462106E7,331212,30,100,null,30],[242,"Virgin Islands (British)","British Virgin Island","VGB","VG","Road Town",30030.0,151,10,10,60,40],[243,"Virgin Islands (U.S.)","U.S. Virgin Island","VIR","VI","Charlotte Amalie",104578.0,347,10,10,60,40],[244,"Wallis and Futuna","Wallis and Futuna","WLF","WF","Mata-Utu",11432.0,142,40,20,null,30],[245,"Western Sahara","Sahrawi","ESH","EH","La�youne",582463.0,266000,50,40,null,20],[246,"Yemen","Yemeni","YEM","YE","Sana\\002Ca",2.9161922E7,527968,30,170,null,30],[247,"Zambia","Zambian","ZMB","ZM","Lusaka",1.786103E7,752612,50,160,50,20],[248,"Zimbabwe","Zimbabwean","ZWE","ZW","Harare",1.4645468E7,390757,50,160,50,20],[249,"�land Islands","�land Island","ALA","AX","Mariehamn",29789.0,1580,20,120,null,20]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"COUNTRY_ID","type":"\"integer\"","metadata":"{}"},{"name":"NAME","type":"\"string\"","metadata":"{}"},{"name":"NATIONALITY","type":"\"string\"","metadata":"{}"},{"name":"COUNTRY_CODE","type":"\"string\"","metadata":"{}"},{"name":"ISO_ALPHA2","type":"\"string\"","metadata":"{}"},{"name":"CAPITAL","type":"\"string\"","metadata":"{}"},{"name":"POPULATION","type":"\"double\"","metadata":"{}"},{"name":"AREA_KM2","type":"\"integer\"","metadata":"{}"},{"name":"REGION_ID","type":"\"integer\"","metadata":"{}"},{"name":"SUB_REGION_ID","type":"\"integer\"","metadata":"{}"},{"name":"INTERMEDIATE_REGION_ID","type":"\"integer\"","metadata":"{}"},{"name":"ORGANIZATION_REGION_ID","type":"\"integer\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[],"columnCustomDisplayInfos":{},"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755214195,"submitTime":1663755214163,"finishTime":1663755214390,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",249]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"7ba3fe0c-8d9c-4666-ae28-1dc2b55e7d59"},{"version":"CommandV1","origId":3603969348519661,"guid":"350e6883-8aa8-4067-aea4-27df22851160","subtype":"command","commandType":"auto","position":4.0,"command":"# Writing the countries_df Dataframe to the DBFS as a csv\ncountries_df.write.csv('/FileStore/tables/countries_out', header=True)","commandVersion":26,"state":"finished","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755286370,"submitTime":1663755286335,"finishTime":1663755287789,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"675939e5-e1eb-4bc7-a853-2d60d09d3dd0"},{"version":"CommandV1","origId":3603969348519662,"guid":"1ab01bc7-747f-4b55-96c2-23e3fd423832","subtype":"command","commandType":"auto","position":5.0,"command":"# Reading in the countries_out file\ndf = spark.read.csv('/FileStore/tables/countries_out', header=True)","commandVersion":14,"state":"finished","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"COUNTRY_ID","nullable":true,"type":"string"},{"metadata":{},"name":"NAME","nullable":true,"type":"string"},{"metadata":{},"name":"NATIONALITY","nullable":true,"type":"string"},{"metadata":{},"name":"COUNTRY_CODE","nullable":true,"type":"string"},{"metadata":{},"name":"ISO_ALPHA2","nullable":true,"type":"string"},{"metadata":{},"name":"CAPITAL","nullable":true,"type":"string"},{"metadata":{},"name":"POPULATION","nullable":true,"type":"string"},{"metadata":{},"name":"AREA_KM2","nullable":true,"type":"string"},{"metadata":{},"name":"REGION_ID","nullable":true,"type":"string"},{"metadata":{},"name":"SUB_REGION_ID","nullable":true,"type":"string"},{"metadata":{},"name":"INTERMEDIATE_REGION_ID","nullable":true,"type":"string"},{"metadata":{},"name":"ORGANIZATION_REGION_ID","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755360852,"submitTime":1663755360813,"finishTime":1663755361289,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"9469c13d-c8e5-4269-a149-491742cea265"},{"version":"CommandV1","origId":3603969348519663,"guid":"8802e1d4-86a2-4482-8b26-049286df4b51","subtype":"command","commandType":"auto","position":6.0,"command":"display(df)","commandVersion":2,"state":"finished","results":{"type":"listResults","data":[{"type":"table","data":[["1","Afghanistan","Afghan","AFG","AF","Kabul","3.8041754E7","652230","30","30",null,"30"],["2","Albania","Albanian","ALB","AL","Tirana","2880917.0","28748","20","70",null,"20"],["3","Algeria","Algerian","DZA","DZ","Algiers","4.3053054E7","2381741","50","40",null,"20"],["4","American Samoa","American Samoan","ASM","AS","Pago Pago","55312.0","199","40","20",null,"30"],["5","Andorra","Andorran","AND","AD","Andorra la Vella","77142.0","468","20","70",null,"20"],["6","Angola","Angolan","AGO","AO","Luanda","3.1825295E7","1246700","50","160","80","20"],["7","Anguilla","Anguillan","AIA","AI","The Valley","14869.0","91","10","10","60","40"],["8","Antarctica","Antarctic","ATA","AQ","McMurdo Station","1106.0","14200000","40",null,null,"30"],["9","Antigua and Barbuda","Antiguan or Barbudan","ATG","AG","St. John's","97118.0","442","10","10","60","40"],["10","Argentina","Argentine","ARG","AR","Buenos Aires","4.4780677E7","2780400","10","10","40","40"],["11","Armenia","Armenian","ARM","AM","Yerevan","2957731.0","29743","30","170",null,"30"],["12","Aruba","Aruban","ABW","AW","Oranjestad","106314.0","180","10","10","60","40"],["13","Australia","Australian","AUS","AU","Canberra","2.5203198E7","7692024","40","90",null,"30"],["14","Austria","Austrian","AUT","AT","Vienna","8955102.0","83871","20","150",null,"20"],["15","Azerbaijan","Azerbaijani","AZE","AZ","Baku","1.0047718E7","86600","30","170",null,"30"],["16","Bahamas","Bahamian","BHS","BS","Nassau","389482.0","13943","10","10","60","40"],["17","Bahrain","Bahraini","BHR","BH","Manama","1641172.0","765","30","170",null,"30"],["18","Bangladesh","Bangladeshi","BGD","BD","Dhaka","1.63046161E8","147570","30","30",null,"30"],["19","Barbados","Barbadian","BRB","BB","Bridgetown","287025.0","430","10","10","60","40"],["20","Belarus","Belarusian","BLR","BY","Minsk","9452411.0","207600","20","140",null,"20"],["21","Belgium","Belgian","BEL","BE","Brussels","1.1539328E7","30528","20","150",null,"20"],["22","Belize","Belizean","BLZ","BZ","Belmopan","390353.0","22966","10","10","20","40"],["23","Benin","Beninese","BEN","BJ","Porto-Novo","1.1801151E7","112622","50","160","10","20"],["24","Bermuda","Bermudian","BMU","BM","Hamilton","62506.0","54","10","80",null,"40"],["25","Bhutan","Bhutanese","BTN","BT","Thimphu","763092.0","38394","30","30",null,"30"],["26","Bolivia (Plurinational State of)","Bolivian","BOL","BO","Sucre","1.15131E7","1098581","10","10","40","40"],["27","Bonaire, Sint Eustatius and Saba","Sint Eustatius and Saba","BES","BQ","Kralendijk","25711.0","328","10","10",null,"40"],["28","Bosnia and Herzegovina","Bosnian or Herzegovinian","BIH","BA","Sarajevo","3301000.0","51209","20","70",null,"20"],["29","Botswana","Motswana","BWA","BW","Gaborone","2303697.0","582000","50","160","30","20"],["30","Bouvet Island","Bouvet Island","BVT","BV",null,"0.0","49","10","10","40","40"],["31","Brazil","Brazilian","BRA","BR","Bras�lia","2.11049527E8","8515767","10","10","40","40"],["32","British Indian Ocean Territory","BIOT","IOT","IO","Point Marianne","4000.0","60","50","160","50","20"],["33","Brunei Darussalam","Bruneian","BRN","BN","Bandar Seri Begawan","433285.0","5765","30","100",null,"30"],["34","Bulgaria","Bulgarian","BGR","BG","Sofia","7000119.0","110879","20","140",null,"20"],["35","Burkina Faso","Burkinab�","BFA","BF","Ouagadougou","2.0321378E7","272967","50","160","10","20"],["36","Burundi","Burundian","BDI","BI","Bujumbura","1.153058E7","27834","50","160","50","20"],["37","Cabo Verde","Cabo Verdean","CPV","CV","Praia","549935.0","4033","50","160","10","20"],["38","Cambodia","Cambodian","KHM","KH","Phnom Penh","1.6486542E7","181035","30","100",null,"30"],["39","Cameroon","Cameroonian","CMR","CM","Yaound�","2.587638E7","475442","50","160","80","20"],["40","Canada","Canadian","CAN","CA","Ottawa","3.7411047E7","9984670","10","80",null,"10"],["41","Cayman Islands","Caymanian","CYM","KY","George Town","64948.0","264","10","10","60","40"],["42","Central African Republic","Central African","CAF","CF","Bangui","4745185.0","622984","50","160","80","20"],["43","Chad","Chadian","TCD","TD","N'Djamena","1.5946876E7","1284000","50","160","80","20"],["44","Chile","Chilean","CHL","CL","Santiago","1.8952038E7","756102","10","10","40","40"],["45","China","Chinese","CHN","CN","Beijing","1.433783686E9","9706961","30","60",null,"30"],["46","Christmas Island","Christmas Island","CXR","CX","Flying Fish Cove","1843.0","135","40","90",null,"30"],["47","Cocos (Keeling) Islands","Cocos Island","CCK","CC","West Island","544.0","14","40","90",null,"30"],["48","Colombia","Colombian","COL","CO","Bogota","5.0339443E7","1141748","10","10","40","40"],["49","Comoros","Comoran","COM","KM","Moroni","850886.0","1862","50","160","50","20"],["50","Congo","Congolese","COG","CG","Brazzaville","5380508.0","342000","50","160","80","20"],["51","Congo, Democratic Republic of the","Congolese","COD","CD","Kinshasa","8.6790567E7","2344858","50","160",null,"20"],["52","Cook Islands","Cook Island","COK","CK","Avarua","17548.0","236","40","20",null,"30"],["53","Costa Rica","Costa Rican","CRI","CR","San Jos�","5047561.0","51100","10","10","20","40"],["54","Croatia","Croatian","HRV","HR","Zagreb","4130304.0","56594","20","70",null,"20"],["55","Cuba","Cuban","CUB","CU","Havana","1.1333483E7","109884","10","10","60","40"],["56","Cura�ao","Cura�aoan","CUW","CW","Willemstad","163424.0","444","10","10","60","40"],["57","Cyprus","Cypriot","CYP","CY","Nicosia","1198575.0","9251","30","170",null,"30"],["58","Czechia","Czech","CZE","CZ","Prague","1.0689209E7","78865","20","140",null,"20"],["59","C�te d'Ivoire","Ivorian","CIV","CI","Yamoussoukro","2.5716544E7","322463","50","160","10","20"],["60","Denmark","Danish","DNK","DK","Copenhagen","5771876.0","43094","20","120",null,"20"],["61","Djibouti","Djiboutian","DJI","DJ","Djibouti","973560.0","23200","50","160","50","20"],["62","Dominica","Dominican","DMA","DM","Roseau","71808.0","751","10","10","60","40"],["63","Dominican Republic","Dominican","DOM","DO","Santo Domingo","1.0738958E7","48671","10","10","60","40"],["64","Ecuador","Ecuadorian","ECU","EC","Quito","1.7373662E7","276841","10","10","40","40"],["65","Egypt","Egyptian","EGY","EG","Cairo","1.00388073E8","1002450","50","40",null,"20"],["66","El Salvador","Salvadoran","SLV","SV","San Salvador","6453553.0","21041","10","10","20","40"],["67","Equatorial Guinea","Equatorial Guinean","GNQ","GQ","Malabo","1355986.0","28051","50","160","80","20"],["68","Eritrea","Eritrean","ERI","ER","Asmara","3497117.0","117600","50","160","50","20"],["69","Estonia","Estonian","EST","EE","Tallinn","1325648.0","45227","20","120",null,"20"],["70","Eswatini","Swazi","SWZ","SZ","Mbabane","1148130.0","17364","50","160","30","20"],["71","Ethiopia","Ethiopian","ETH","ET","Addis Ababa","1.1207873E8","1104300","50","160","50","20"],["72","Falkland Islands (Malvinas)","Falkland Island","FLK","FK","Stanley","3377.0","12173","10","10","40","40"],["73","Faroe Islands","Faroese","FRO","FO","T�rshavn","48678.0","1393","20","120",null,"20"],["74","Fiji","Fijian","FJI","FJ","Suva","889953.0","18272","40","130",null,"30"],["75","Finland","Finnish","FIN","FI","Helsinki","5532156.0","338424","20","120",null,"20"],["76","France","French","FRA","FR","Paris","6.5129728E7","551695","20","150",null,"20"],["77","French Guiana","French Guianese","GUF","GF","Cayenne","290832.0","83534","10","10","40","40"],["78","French Polynesia","French Polynesian","PYF","PF","Papeete","279287.0","4167","40","20",null,"30"],["79","French Southern Territories","French Southern Territories","ATF","TF","Saint Pierre","150.0","439780","50","160","50","20"],["80","Gabon","Gabonese","GAB","GA","Libreville","2172579.0","267668","50","160","80","20"],["81","Gambia","Gambian","GMB","GM","Banjul","2347706.0","10689","50","160","10","20"],["82","Georgia","Georgian","GEO","GE","Tbilisi","3996765.0","69700","30","170",null,"30"],["83","Germany","German","DEU","DE","Berlin","8.3517045E7","357114","20","150",null,"20"],["84","Ghana","Ghanaian","GHA","GH","Accra","3.0417856E7","238533","50","160","10","20"],["85","Gibraltar","Gibraltar","GIB","GI","Gibraltar","33701.0","6","20","70",null,"20"],["86","Greece","Greek","GRC","GR","Athens","1.0473455E7","131990","20","70",null,"20"],["87","Greenland","Greenlandic","GRL","GL","Nuuk","56672.0","2166086","10","80",null,"20"],["88","Grenada","Grenadian","GRD","GD","St. George's","112003.0","344","10","10","60","40"],["89","Guadeloupe","Guadeloupe","GLP","GP","Basse Terre","400056.0","1628","10","10","60","40"],["90","Guam","Guamanian","GUM","GU","Hag�t�a","167294.0","549","40","50",null,"30"],["91","Guatemala","Guatemalan","GTM","GT","Guatemala City","1.7581472E7","108889","10","10","20","40"],["92","Guernsey","Channel Island","GGY","GG","St. Peter Port","63026.0","65","20","120","70","20"],["93","Guinea","Guinean","GIN","GN","Conakry","1.2771246E7","245857","50","160","10","20"],["94","Guinea-Bissau","Bissau-Guinean","GNB","GW","Bissau","1920922.0","36125","50","160","10","20"],["95","Guyana","Guyanese","GUY","GY","Georgetown","782766.0","214969","10","10","40","40"],["96","Haiti","Haitian","HTI","HT","Port-au-Prince","1.1263077E7","27750","10","10","60","40"],["97","Heard Island and McDonald Islands","Heard Island or McDonald Islands","HMD","HM",null,"0.0","368","40","90",null,"30"],["98","Holy See","Vatican","VAT","VA","Vatican City","799.0",null,"20","70",null,"20"],["99","Honduras","Honduran","HND","HN","Tegucigalpa","9746117.0","112492","10","10","20","40"],["100","Hong Kong","Hong Kong","HKG","HK","City of Victoria","7436154.0","1104","30","60",null,"30"],["101","Hungary","Hungarian","HUN","HU","Budapest","9684679.0","93028","20","140",null,"20"],["102","Iceland","Icelandic","ISL","IS","Reykjav�k","339031.0","103000","20","120",null,"20"],["103","India","Indian","IND","IN","New Delhi","1.366417754E9","3287590","30","30",null,"30"],["104","Indonesia","Indonesian","IDN","ID","Jakarta","2.70625568E8","1904569","30","100",null,"30"],["105","Iran (Islamic Republic of)","Iranian","IRN","IR","Tehran","8.2913906E7","1648195","30","30",null,"30"],["106","Iraq","Iraqi","IRQ","IQ","Baghdad","3.9309783E7","438317","30","170",null,"30"],["107","Ireland","Irish","IRL","IE","Dublin","4882495.0","70273","20","120",null,"20"],["108","Isle of Man","Manx","IMN","IM","Douglas","84584.0","572","20","120",null,"20"],["109","Israel","Israeli","ISR","IL","Jerusalem","8519377.0","20770","30","170",null,"30"],["110","Italy","Italian","ITA","IT","Rome","6.0550075E7","301336","20","70",null,"20"],["111","Jamaica","Jamaican","JAM","JM","Kingston","2948279.0","10991","10","10","60","40"],["112","Japan","Japanese","JPN","JP","Tokyo","1.26860301E8","377930","30","60",null,"30"],["113","Jersey","Channel Island","JEY","JE","St. Helier","100000.0","120","20","120","70","20"],["114","Jordan","Jordanian","JOR","JO","Amman","1.0101694E7","89342","30","170",null,"30"],["115","Kazakhstan","Kazakhstani","KAZ","KZ","Astana","1.8551427E7","2724900","30","110",null,"30"],["116","Kenya","Kenyan","KEN","KE","Nairobi","5.2573973E7","580367","50","160","50","20"],["117","Kiribati","I-Kiribati","KIR","KI","Tarawa","117606.0","811","40","50",null,"30"],["118","Kuwait","Kuwaiti","KWT","KW","Kuwait City","4207083.0","17818","30","170",null,"30"],["119","Kyrgyzstan","Kyrgyzstani","KGZ","KG","Bishkek","6415850.0","199951","30","110",null,"30"],["120","Laos, People's Democratic Republic","Lao","LAO","LA","Vientiane","7169455.0","236800","30","100",null,"30"],["121","Latvia","Latvian","LVA","LV","Riga","1906743.0","64559","20","120",null,"20"],["122","Lebanon","Lebanese","LBN","LB","Beirut","6855713.0","10452","30","170",null,"30"],["123","Lesotho","Basotho","LSO","LS","Maseru","2125268.0","30355","50","160","30","20"],["124","Liberia","Liberian","LBR","LR","Monrovia","4937374.0","111369","50","160","10","20"],["125","Libya","Libyan","LBY","LY","Tripoli","6777452.0","1759540","50","40",null,"20"],["126","Liechtenstein","Liechtenstein","LIE","LI","Vaduz","38019.0","160","20","150",null,"20"],["127","Lithuania","Lithuanian","LTU","LT","Vilnius","2759627.0","65300","20","120",null,"20"],["128","Luxembourg","Luxembourg","LUX","LU","Luxembourg","615729.0","2586","20","150",null,"20"],["129","Macau","Macanese","MAC","MO","Macao","640445.0","30","30","60",null,"30"],["130","Madagascar","Malagasy","MDG","MG","Antananarivo","2.6969307E7","587041","50","160","50","20"],["131","Malawi","Malawian","MWI","MW","Lilongwe","1.8628747E7","118484","50","160","50","20"],["132","Malaysia","Malaysian","MYS","MY","Kuala Lumpur","3.1949777E7","330803","30","100",null,"30"],["133","Maldives","Maldivian","MDV","MV","Mal�","530953.0","300","30","30",null,"30"],["134","Mali","Malian","MLI","ML","Bamako","1.9658031E7","1240192","50","160","10","20"],["135","Malta","Maltese","MLT","MT","Valletta","440372.0","316","20","70",null,"20"],["136","Marshall Islands","Marshallese","MHL","MH","Majuro","58791.0","181","40","50",null,"30"],["137","Martinique","Martiniquais","MTQ","MQ","Fort-de-France Bay","375554.0","1128","10","10","60","40"],["138","Mauritania","Mauritanian","MRT","MR","Nouakchott","4525696.0","1030700","50","160","10","20"],["139","Mauritius","Mauritian","MUS","MU","Port Louis","1269668.0","2040","50","160","50","20"],["140","Mayotte","Mahoran","MYT","YT","Mamoudzou","266150.0","374","50","160","50","20"],["141","Mexico","Mexican","MEX","MX","Mexico City","1.27575529E8","1964375","10","10","20","40"],["142","Micronesia (Federated States of)","Micronesian","FSM","FM","Palikir","113815.0","702","40","50",null,"30"],["143","Moldova, Republic of","Moldovan","MDA","MD","Chisinau","4043263.0","33846","20","140",null,"20"],["144","Monaco","Mon�gasque","MCO","MC","Monaco","38964.0",null,"20","150",null,"20"],["145","Mongolia","Mongolian","MNG","MN","Ulaanbaatar","3225167.0","1564110","30","60",null,"30"],["146","Montenegro","Montenegrin","MNE","ME","Podgorica","627987.0","13812","20","70",null,"20"],["147","Montserrat","Montserratian","MSR","MS","Plymouth","4989.0","102","10","10","60","40"],["148","Morocco","Moroccan","MAR","MA","Rabat","3.6471769E7","446550","50","40",null,"20"],["149","Mozambique","Mozambican","MOZ","MZ","Maputo","3.0366036E7","801590","50","160","50","20"],["150","Myanmar","Burmese","MMR","MM","Naypyidaw","5.404542E7","676578","30","100",null,"30"],["151","Namibia","Namibian","NAM","NA","Windhoek","2494530.0","825615","50","160","30","20"],["152","Nauru","Nauruan","NRU","NR","Yaren","10756.0","21","40","50",null,"30"],["153","Nepal","Nepali","NPL","NP","Kathmandu","2.860871E7","147181","30","30",null,"30"],["154","Netherlands","Dutch","NLD","NL","Amsterdam","1.709713E7","41850","20","150",null,"20"],["155","New Caledonia","New Caledonian","NCL","NC","Noum�a","282750.0","18575","40","130",null,"30"],["156","New Zealand","New Zealander","NZL","NZ","Wellington","4783063.0","270467","40","90",null,"30"],["157","Nicaragua","Nicaraguan","NIC","NI","Managua","6545502.0","130373","10","10","20","40"],["158","Niger","Nigerien","NER","NE","Niamey","2.3310715E7","1267000","50","160","10","20"],["159","Nigeria","Nigerian","NGA","NG","Abuja","2.00963599E8","923768","50","160","10","20"],["160","Niue","Niuean","NIU","NU","Alofi","1615.0","260","40","20",null,"30"],["161","Norfolk Island","Norfolk Island","NFK","NF","Kingston","1748.0","35","40","90",null,"30"],["162","North Korea (Democratic People's Republic of)","North Korean","PRK","KP","Pyongyang","2.5666161E7","120538","30","60",null,"30"],["163","North Macedonia","Macedonian","MKD","MK","Skopje","2083459.0","25713","20","70",null,"20"],["164","Northern Mariana Islands","Northern Marianan","MNP","MP","Saipan","57216.0","464","40","50",null,"30"],["165","Norway","Norwegian","NOR","NO","Oslo","5378857.0","323802","20","120",null,"20"],["166","Oman","Omani","OMN","OM","Muscat","4974986.0","309500","30","170",null,"30"],["167","Pakistan","Pakistani","PAK","PK","Islamabad","2.16565318E8","881912","30","30",null,"30"],["168","Palau","Palauan","PLW","PW","Ngerulmud","18008.0","459","40","50",null,"30"],["169","Palestine, State of","Palestinian","PSE","PS","Ramallah","4981420.0","6220","30","170",null,"30"],["170","Panama","Panamanian","PAN","PA","Panama City","4246439.0","75417","10","10","20","40"],["171","Papua New Guinea","Papua New Guinean","PNG","PG","Port Moresby","8776109.0","462840","40","130",null,"30"],["172","Paraguay","Paraguayan","PRY","PY","Asunci�n","7044636.0","406752","10","10","40","40"],["173","Peru","Peruvian","PER","PE","Lima","3.2510453E7","1285216","10","10","40","40"],["174","Philippines","Filipino","PHL","PH","Manila","1.08116615E8","342353","30","100",null,"30"],["175","Pitcairn","Pitcairn Island","PCN","PN","Adamstown","68.0","43","40","20",null,"30"],["176","Poland","Polish","POL","PL","Warsaw","3.7887768E7","312679","20","140",null,"20"],["177","Portugal","Portuguese","PRT","PT","Lisbon","1.0226187E7","92090","20","70",null,"20"],["178","Puerto Rico","Puerto Rican","PRI","PR","San Juan","2933408.0","8870","10","10","60","40"],["179","Qatar","Qatari","QAT","QA","Doha","2832067.0","11586","30","170",null,"30"],["180","Romania","Romanian","ROU","RO","Bucharest","1.9364557E7","238391","20","140",null,"20"],["181","Russian Federation","Russian","RUS","RU","Moscow","1.45872256E8","17098242","20","140",null,"20"],["182","Rwanda","Rwandan","RWA","RW","Kigali","1.262695E7","26338","50","160","50","20"],["183","R�union","R�unionese","REU","RE","Saint-Denis","888927.0","2511","50","160","50","20"],["184","Saint Barth�lemy","Barth�lemois","BLM","BL","Gustavia","9847.0","21","10","10","60","40"],["185","Saint Helena, Ascension and Tristan da Cunha","Ascension and Tristan da Cunha","SHN","SH","Jamestown","5633.0","394","50","160",null,"20"],["186","Saint Kitts and Nevis","Kittitian or Nevisian","KNA","KN","Basseterre","52823.0","261","10","10","60","40"],["187","Saint Lucia","Saint Lucian","LCA","LC","Castries","182790.0","616","10","10","60","40"],["188","Saint Martin (French part)","Saint-Martinoise","MAF","MF","Marigot","38002.0","53","10","10","60","40"],["189","Saint Pierre and Miquelon","Saint-Pierrais or Miquelonnais","SPM","PM","St. Pierre","5822.0","242","10","80",null,"40"],["190","Saint Vincent and the Grenadines","Saint Vincentian","VCT","VC","Kingstown","110589.0","389","10","10","60","40"],["191","Samoa","Samoan","WSM","WS","Apia","197097.0","2842","40","20",null,"30"],["192","San Marino","Sammarinese","SMR","SM","San Marino","33860.0","61","20","70",null,"20"],["193","Sao Tome and Principe","S�o Tom�an","STP","ST","Sao Tome","215056.0","964","50","160","80","20"],["194","Saudi Arabia","Saudi","SAU","SA","Riyadh","3.4268528E7","2149690","30","170",null,"30"],["195","Senegal","Senegalese","SEN","SN","Dakar","1.6296364E7","196722","50","160","10","20"],["196","Serbia","Serbian","SRB","RS","Belgrade","8772235.0","88361","20","70",null,"20"],["197","Seychelles","Seychellois","SYC","SC","Victoria","97739.0","452","50","160","50","20"],["198","Sierra Leone","Sierra Leonean","SLE","SL","Freetown","7813215.0","71740","50","160","10","20"],["199","Singapore","Singaporean","SGP","SG","Singapore","5804337.0","710","30","100",null,"30"],["200","Sint Maarten (Dutch part)","Sint Maarten","SXM","SX","Philipsburg","42388.0","34","10","10","60","40"],["201","Slovakia","Slovak","SVK","SK","Bratislava","5457013.0","49037","20","140",null,"20"],["202","Slovenia","Slovenian","SVN","SI","Ljubljana","2078654.0","20273","20","70",null,"20"],["203","Solomon Islands","Solomon Island","SLB","SB","Honiara","669823.0","28896","40","130",null,"30"],["204","Somalia","Somali","SOM","SO","Mogadishu","1.5442905E7","637657","50","160","50","20"],["205","South Africa","South African","ZAF","ZA","Pretoria","5.855827E7","1221037","50","160","30","20"],["206","South Georgia and the South Sandwich Islands","South Georgia or South Sandwich Islands","SGS","GS","Grytviken","30.0","3903","10","10","40","40"],["207","South Korea (Republic of)","South Korean","KOR","KR","Seoul","5.1225308E7","100210","30","60",null,"30"],["208","South Sudan","South Sudanese","SSD","SS","Juba","1.1062113E7","619745","50","160","50","20"],["209","Spain","Spanish","ESP","ES","Madrid","4.6736776E7","505992","20","70",null,"20"],["210","Sri Lanka","Sri Lankan","LKA","LK","Sri Jayawardenapura Kotte","2.1323733E7","65610","30","30",null,"30"],["211","Sudan","Sudanese","SDN","SD","Khartoum","4.2813238E7","1886068","50","40",null,"20"],["212","Suriname","Surinamese","SUR","SR","Paramaribo","581372.0","163820","10","10","40","40"],["213","Svalbard and Jan Mayen","Svalbard","SJM","SJ","Longyearbyen","2667.0","61399","20","120",null,"20"],["214","Sweden","Swedish","SWE","SE","Stockholm","1.0036379E7","450295","20","120",null,"20"],["215","Switzerland","Swiss","CHE","CH","Bern","8591365.0","41284","20","150",null,"20"],["216","Syrian Arab Republic","Syrian","SYR","SY","Damascus","1.7070135E7","185180","30","170",null,"30"],["217","Taiwan (Province of China)","Taiwanese","TWN","TW","Taipei","2.3773876E7","36193","30","60",null,"30"],["218","Tajikistan","Tajikistani","TJK","TJ","Dushanbe","9321018.0","143100","30","110",null,"30"],["219","Tanzania (United Republic of)","Tanzanian","TZA","TZ","Dodoma","5.8005463E7","945087","50","160",null,"20"],["220","Thailand","Thai","THA","TH","Bangkok","6.9625582E7","513120","30","100",null,"30"],["221","Timor-Leste","Timorese","TLS","TL","Dili","1293119.0","14874","30","100",null,"30"],["222","Togo","Togolese","TGO","TG","Lom�","8082366.0","56785","50","160","10","20"],["223","Tokelau","Tokelauan","TKL","TK","Nukunonu","1340.0","12","40","20",null,"30"],["224","Tonga","Tongan","TON","TO","Nuku�alofa","104494.0","747","40","20",null,"30"],["225","Trinidad and Tobago","Trinidadian or Tobagonian","TTO","TT","Port of Spain","1394973.0","5130","10","10","60","40"],["226","Tunisia","Tunisian","TUN","TN","Tunis","1.1694719E7","163610","50","40",null,"20"],["227","Turkey","Turkish","TUR","TR","Ankara","8.3429615E7","783562","30","170",null,"30"],["228","Turkmenistan","Turkmen","TKM","TM","Ashgabat","5942089.0","488100","30","110",null,"30"],["229","Turks and Caicos Islands","Turks and Caicos Island","TCA","TC","Cockburn Town","38191.0","948","10","10","60","40"],["230","Tuvalu","Tuvaluan","TUV","TV","Funafuti","11646.0","26","40","20",null,"30"],["231","Uganda","Ugandan","UGA","UG","Kampala","4.4269594E7","241550","50","160","50","20"],["232","Ukraine","Ukrainian","UKR","UA","Kiev","4.3993638E7","603500","20","140",null,"20"],["233","United Arab Emirates","Emirati","ARE","AE","Abu Dhabi","9770529.0","83600","30","170",null,"30"],["234","United Kingdom of Great Britain and Northern Ireland","British","GBR","GB","London","6.7530172E7","242900","20","120",null,"20"],["235","United States Minor Outlying Islands","American","UMI","UM",null,"300.0","34","40","50",null,"30"],["236","United States of America","American","USA","US","Washington, D.C.","3.29064917E8","9372610","10","80",null,"10"],["237","Uruguay","Uruguayan","URY","UY","Montevideo","3461734.0","181034","10","10","40","40"],["238","Uzbekistan","Uzbekistani","UZB","UZ","Tashkent","3.2981716E7","447400","30","110",null,"30"],["239","Vanuatu","Ni-Vanuatu","VUT","VU","Port Vila","299882.0","12189","40","130",null,"30"],["240","Venezuela (Bolivarian Republic of)","Venezuelan","VEN","VE","Caracas","2.8515829E7","916445","10","10","40","40"],["241","Vietnam","Vietnamese","VNM","VN","Hanoi","9.6462106E7","331212","30","100",null,"30"],["242","Virgin Islands (British)","British Virgin Island","VGB","VG","Road Town","30030.0","151","10","10","60","40"],["243","Virgin Islands (U.S.)","U.S. Virgin Island","VIR","VI","Charlotte Amalie","104578.0","347","10","10","60","40"],["244","Wallis and Futuna","Wallis and Futuna","WLF","WF","Mata-Utu","11432.0","142","40","20",null,"30"],["245","Western Sahara","Sahrawi","ESH","EH","La�youne","582463.0","266000","50","40",null,"20"],["246","Yemen","Yemeni","YEM","YE","Sana\\002Ca","2.9161922E7","527968","30","170",null,"30"],["247","Zambia","Zambian","ZMB","ZM","Lusaka","1.786103E7","752612","50","160","50","20"],["248","Zimbabwe","Zimbabwean","ZWE","ZW","Harare","1.4645468E7","390757","50","160","50","20"],["249","�land Islands","�land Island","ALA","AX","Mariehamn","29789.0","1580","20","120",null,"20"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"COUNTRY_ID","type":"\"string\"","metadata":"{}"},{"name":"NAME","type":"\"string\"","metadata":"{}"},{"name":"NATIONALITY","type":"\"string\"","metadata":"{}"},{"name":"COUNTRY_CODE","type":"\"string\"","metadata":"{}"},{"name":"ISO_ALPHA2","type":"\"string\"","metadata":"{}"},{"name":"CAPITAL","type":"\"string\"","metadata":"{}"},{"name":"POPULATION","type":"\"string\"","metadata":"{}"},{"name":"AREA_KM2","type":"\"string\"","metadata":"{}"},{"name":"REGION_ID","type":"\"string\"","metadata":"{}"},{"name":"SUB_REGION_ID","type":"\"string\"","metadata":"{}"},{"name":"INTERMEDIATE_REGION_ID","type":"\"string\"","metadata":"{}"},{"name":"ORGANIZATION_REGION_ID","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[],"columnCustomDisplayInfos":{},"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755363426,"submitTime":1663755363391,"finishTime":1663755363539,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",249]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"4f338598-3080-4fae-b054-79a337146862"},{"version":"CommandV1","origId":3603969348519664,"guid":"fdd13ab2-b483-4e6d-8131-fad619efa985","subtype":"command","commandType":"auto","position":8.0,"command":"# Specifying the mode as overwrite allows you to overwrite an existing file\ndf.write.options(header=True).mode('overwrite').csv('/FileStore/tables/output/countries_out')","commandVersion":37,"state":"finished","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755571621,"submitTime":1663755571588,"finishTime":1663755572361,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"33ca8a38-b72b-4aa5-8f37-456e5047f47e"},{"version":"CommandV1","origId":3603969348519665,"guid":"204171a5-be55-4715-bd80-886e0296e6c5","subtype":"command","commandType":"auto","position":9.0,"command":"display(df)","commandVersion":3,"state":"finished","results":{"type":"listResults","data":[{"type":"table","data":[["1","Afghanistan","Afghan","AFG","AF","Kabul","3.8041754E7","652230","30","30",null,"30"],["2","Albania","Albanian","ALB","AL","Tirana","2880917.0","28748","20","70",null,"20"],["3","Algeria","Algerian","DZA","DZ","Algiers","4.3053054E7","2381741","50","40",null,"20"],["4","American Samoa","American Samoan","ASM","AS","Pago Pago","55312.0","199","40","20",null,"30"],["5","Andorra","Andorran","AND","AD","Andorra la Vella","77142.0","468","20","70",null,"20"],["6","Angola","Angolan","AGO","AO","Luanda","3.1825295E7","1246700","50","160","80","20"],["7","Anguilla","Anguillan","AIA","AI","The Valley","14869.0","91","10","10","60","40"],["8","Antarctica","Antarctic","ATA","AQ","McMurdo Station","1106.0","14200000","40",null,null,"30"],["9","Antigua and Barbuda","Antiguan or Barbudan","ATG","AG","St. John's","97118.0","442","10","10","60","40"],["10","Argentina","Argentine","ARG","AR","Buenos Aires","4.4780677E7","2780400","10","10","40","40"],["11","Armenia","Armenian","ARM","AM","Yerevan","2957731.0","29743","30","170",null,"30"],["12","Aruba","Aruban","ABW","AW","Oranjestad","106314.0","180","10","10","60","40"],["13","Australia","Australian","AUS","AU","Canberra","2.5203198E7","7692024","40","90",null,"30"],["14","Austria","Austrian","AUT","AT","Vienna","8955102.0","83871","20","150",null,"20"],["15","Azerbaijan","Azerbaijani","AZE","AZ","Baku","1.0047718E7","86600","30","170",null,"30"],["16","Bahamas","Bahamian","BHS","BS","Nassau","389482.0","13943","10","10","60","40"],["17","Bahrain","Bahraini","BHR","BH","Manama","1641172.0","765","30","170",null,"30"],["18","Bangladesh","Bangladeshi","BGD","BD","Dhaka","1.63046161E8","147570","30","30",null,"30"],["19","Barbados","Barbadian","BRB","BB","Bridgetown","287025.0","430","10","10","60","40"],["20","Belarus","Belarusian","BLR","BY","Minsk","9452411.0","207600","20","140",null,"20"],["21","Belgium","Belgian","BEL","BE","Brussels","1.1539328E7","30528","20","150",null,"20"],["22","Belize","Belizean","BLZ","BZ","Belmopan","390353.0","22966","10","10","20","40"],["23","Benin","Beninese","BEN","BJ","Porto-Novo","1.1801151E7","112622","50","160","10","20"],["24","Bermuda","Bermudian","BMU","BM","Hamilton","62506.0","54","10","80",null,"40"],["25","Bhutan","Bhutanese","BTN","BT","Thimphu","763092.0","38394","30","30",null,"30"],["26","Bolivia (Plurinational State of)","Bolivian","BOL","BO","Sucre","1.15131E7","1098581","10","10","40","40"],["27","Bonaire, Sint Eustatius and Saba","Sint Eustatius and Saba","BES","BQ","Kralendijk","25711.0","328","10","10",null,"40"],["28","Bosnia and Herzegovina","Bosnian or Herzegovinian","BIH","BA","Sarajevo","3301000.0","51209","20","70",null,"20"],["29","Botswana","Motswana","BWA","BW","Gaborone","2303697.0","582000","50","160","30","20"],["30","Bouvet Island","Bouvet Island","BVT","BV",null,"0.0","49","10","10","40","40"],["31","Brazil","Brazilian","BRA","BR","Bras�lia","2.11049527E8","8515767","10","10","40","40"],["32","British Indian Ocean Territory","BIOT","IOT","IO","Point Marianne","4000.0","60","50","160","50","20"],["33","Brunei Darussalam","Bruneian","BRN","BN","Bandar Seri Begawan","433285.0","5765","30","100",null,"30"],["34","Bulgaria","Bulgarian","BGR","BG","Sofia","7000119.0","110879","20","140",null,"20"],["35","Burkina Faso","Burkinab�","BFA","BF","Ouagadougou","2.0321378E7","272967","50","160","10","20"],["36","Burundi","Burundian","BDI","BI","Bujumbura","1.153058E7","27834","50","160","50","20"],["37","Cabo Verde","Cabo Verdean","CPV","CV","Praia","549935.0","4033","50","160","10","20"],["38","Cambodia","Cambodian","KHM","KH","Phnom Penh","1.6486542E7","181035","30","100",null,"30"],["39","Cameroon","Cameroonian","CMR","CM","Yaound�","2.587638E7","475442","50","160","80","20"],["40","Canada","Canadian","CAN","CA","Ottawa","3.7411047E7","9984670","10","80",null,"10"],["41","Cayman Islands","Caymanian","CYM","KY","George Town","64948.0","264","10","10","60","40"],["42","Central African Republic","Central African","CAF","CF","Bangui","4745185.0","622984","50","160","80","20"],["43","Chad","Chadian","TCD","TD","N'Djamena","1.5946876E7","1284000","50","160","80","20"],["44","Chile","Chilean","CHL","CL","Santiago","1.8952038E7","756102","10","10","40","40"],["45","China","Chinese","CHN","CN","Beijing","1.433783686E9","9706961","30","60",null,"30"],["46","Christmas Island","Christmas Island","CXR","CX","Flying Fish Cove","1843.0","135","40","90",null,"30"],["47","Cocos (Keeling) Islands","Cocos Island","CCK","CC","West Island","544.0","14","40","90",null,"30"],["48","Colombia","Colombian","COL","CO","Bogota","5.0339443E7","1141748","10","10","40","40"],["49","Comoros","Comoran","COM","KM","Moroni","850886.0","1862","50","160","50","20"],["50","Congo","Congolese","COG","CG","Brazzaville","5380508.0","342000","50","160","80","20"],["51","Congo, Democratic Republic of the","Congolese","COD","CD","Kinshasa","8.6790567E7","2344858","50","160",null,"20"],["52","Cook Islands","Cook Island","COK","CK","Avarua","17548.0","236","40","20",null,"30"],["53","Costa Rica","Costa Rican","CRI","CR","San Jos�","5047561.0","51100","10","10","20","40"],["54","Croatia","Croatian","HRV","HR","Zagreb","4130304.0","56594","20","70",null,"20"],["55","Cuba","Cuban","CUB","CU","Havana","1.1333483E7","109884","10","10","60","40"],["56","Cura�ao","Cura�aoan","CUW","CW","Willemstad","163424.0","444","10","10","60","40"],["57","Cyprus","Cypriot","CYP","CY","Nicosia","1198575.0","9251","30","170",null,"30"],["58","Czechia","Czech","CZE","CZ","Prague","1.0689209E7","78865","20","140",null,"20"],["59","C�te d'Ivoire","Ivorian","CIV","CI","Yamoussoukro","2.5716544E7","322463","50","160","10","20"],["60","Denmark","Danish","DNK","DK","Copenhagen","5771876.0","43094","20","120",null,"20"],["61","Djibouti","Djiboutian","DJI","DJ","Djibouti","973560.0","23200","50","160","50","20"],["62","Dominica","Dominican","DMA","DM","Roseau","71808.0","751","10","10","60","40"],["63","Dominican Republic","Dominican","DOM","DO","Santo Domingo","1.0738958E7","48671","10","10","60","40"],["64","Ecuador","Ecuadorian","ECU","EC","Quito","1.7373662E7","276841","10","10","40","40"],["65","Egypt","Egyptian","EGY","EG","Cairo","1.00388073E8","1002450","50","40",null,"20"],["66","El Salvador","Salvadoran","SLV","SV","San Salvador","6453553.0","21041","10","10","20","40"],["67","Equatorial Guinea","Equatorial Guinean","GNQ","GQ","Malabo","1355986.0","28051","50","160","80","20"],["68","Eritrea","Eritrean","ERI","ER","Asmara","3497117.0","117600","50","160","50","20"],["69","Estonia","Estonian","EST","EE","Tallinn","1325648.0","45227","20","120",null,"20"],["70","Eswatini","Swazi","SWZ","SZ","Mbabane","1148130.0","17364","50","160","30","20"],["71","Ethiopia","Ethiopian","ETH","ET","Addis Ababa","1.1207873E8","1104300","50","160","50","20"],["72","Falkland Islands (Malvinas)","Falkland Island","FLK","FK","Stanley","3377.0","12173","10","10","40","40"],["73","Faroe Islands","Faroese","FRO","FO","T�rshavn","48678.0","1393","20","120",null,"20"],["74","Fiji","Fijian","FJI","FJ","Suva","889953.0","18272","40","130",null,"30"],["75","Finland","Finnish","FIN","FI","Helsinki","5532156.0","338424","20","120",null,"20"],["76","France","French","FRA","FR","Paris","6.5129728E7","551695","20","150",null,"20"],["77","French Guiana","French Guianese","GUF","GF","Cayenne","290832.0","83534","10","10","40","40"],["78","French Polynesia","French Polynesian","PYF","PF","Papeete","279287.0","4167","40","20",null,"30"],["79","French Southern Territories","French Southern Territories","ATF","TF","Saint Pierre","150.0","439780","50","160","50","20"],["80","Gabon","Gabonese","GAB","GA","Libreville","2172579.0","267668","50","160","80","20"],["81","Gambia","Gambian","GMB","GM","Banjul","2347706.0","10689","50","160","10","20"],["82","Georgia","Georgian","GEO","GE","Tbilisi","3996765.0","69700","30","170",null,"30"],["83","Germany","German","DEU","DE","Berlin","8.3517045E7","357114","20","150",null,"20"],["84","Ghana","Ghanaian","GHA","GH","Accra","3.0417856E7","238533","50","160","10","20"],["85","Gibraltar","Gibraltar","GIB","GI","Gibraltar","33701.0","6","20","70",null,"20"],["86","Greece","Greek","GRC","GR","Athens","1.0473455E7","131990","20","70",null,"20"],["87","Greenland","Greenlandic","GRL","GL","Nuuk","56672.0","2166086","10","80",null,"20"],["88","Grenada","Grenadian","GRD","GD","St. George's","112003.0","344","10","10","60","40"],["89","Guadeloupe","Guadeloupe","GLP","GP","Basse Terre","400056.0","1628","10","10","60","40"],["90","Guam","Guamanian","GUM","GU","Hag�t�a","167294.0","549","40","50",null,"30"],["91","Guatemala","Guatemalan","GTM","GT","Guatemala City","1.7581472E7","108889","10","10","20","40"],["92","Guernsey","Channel Island","GGY","GG","St. Peter Port","63026.0","65","20","120","70","20"],["93","Guinea","Guinean","GIN","GN","Conakry","1.2771246E7","245857","50","160","10","20"],["94","Guinea-Bissau","Bissau-Guinean","GNB","GW","Bissau","1920922.0","36125","50","160","10","20"],["95","Guyana","Guyanese","GUY","GY","Georgetown","782766.0","214969","10","10","40","40"],["96","Haiti","Haitian","HTI","HT","Port-au-Prince","1.1263077E7","27750","10","10","60","40"],["97","Heard Island and McDonald Islands","Heard Island or McDonald Islands","HMD","HM",null,"0.0","368","40","90",null,"30"],["98","Holy See","Vatican","VAT","VA","Vatican City","799.0",null,"20","70",null,"20"],["99","Honduras","Honduran","HND","HN","Tegucigalpa","9746117.0","112492","10","10","20","40"],["100","Hong Kong","Hong Kong","HKG","HK","City of Victoria","7436154.0","1104","30","60",null,"30"],["101","Hungary","Hungarian","HUN","HU","Budapest","9684679.0","93028","20","140",null,"20"],["102","Iceland","Icelandic","ISL","IS","Reykjav�k","339031.0","103000","20","120",null,"20"],["103","India","Indian","IND","IN","New Delhi","1.366417754E9","3287590","30","30",null,"30"],["104","Indonesia","Indonesian","IDN","ID","Jakarta","2.70625568E8","1904569","30","100",null,"30"],["105","Iran (Islamic Republic of)","Iranian","IRN","IR","Tehran","8.2913906E7","1648195","30","30",null,"30"],["106","Iraq","Iraqi","IRQ","IQ","Baghdad","3.9309783E7","438317","30","170",null,"30"],["107","Ireland","Irish","IRL","IE","Dublin","4882495.0","70273","20","120",null,"20"],["108","Isle of Man","Manx","IMN","IM","Douglas","84584.0","572","20","120",null,"20"],["109","Israel","Israeli","ISR","IL","Jerusalem","8519377.0","20770","30","170",null,"30"],["110","Italy","Italian","ITA","IT","Rome","6.0550075E7","301336","20","70",null,"20"],["111","Jamaica","Jamaican","JAM","JM","Kingston","2948279.0","10991","10","10","60","40"],["112","Japan","Japanese","JPN","JP","Tokyo","1.26860301E8","377930","30","60",null,"30"],["113","Jersey","Channel Island","JEY","JE","St. Helier","100000.0","120","20","120","70","20"],["114","Jordan","Jordanian","JOR","JO","Amman","1.0101694E7","89342","30","170",null,"30"],["115","Kazakhstan","Kazakhstani","KAZ","KZ","Astana","1.8551427E7","2724900","30","110",null,"30"],["116","Kenya","Kenyan","KEN","KE","Nairobi","5.2573973E7","580367","50","160","50","20"],["117","Kiribati","I-Kiribati","KIR","KI","Tarawa","117606.0","811","40","50",null,"30"],["118","Kuwait","Kuwaiti","KWT","KW","Kuwait City","4207083.0","17818","30","170",null,"30"],["119","Kyrgyzstan","Kyrgyzstani","KGZ","KG","Bishkek","6415850.0","199951","30","110",null,"30"],["120","Laos, People's Democratic Republic","Lao","LAO","LA","Vientiane","7169455.0","236800","30","100",null,"30"],["121","Latvia","Latvian","LVA","LV","Riga","1906743.0","64559","20","120",null,"20"],["122","Lebanon","Lebanese","LBN","LB","Beirut","6855713.0","10452","30","170",null,"30"],["123","Lesotho","Basotho","LSO","LS","Maseru","2125268.0","30355","50","160","30","20"],["124","Liberia","Liberian","LBR","LR","Monrovia","4937374.0","111369","50","160","10","20"],["125","Libya","Libyan","LBY","LY","Tripoli","6777452.0","1759540","50","40",null,"20"],["126","Liechtenstein","Liechtenstein","LIE","LI","Vaduz","38019.0","160","20","150",null,"20"],["127","Lithuania","Lithuanian","LTU","LT","Vilnius","2759627.0","65300","20","120",null,"20"],["128","Luxembourg","Luxembourg","LUX","LU","Luxembourg","615729.0","2586","20","150",null,"20"],["129","Macau","Macanese","MAC","MO","Macao","640445.0","30","30","60",null,"30"],["130","Madagascar","Malagasy","MDG","MG","Antananarivo","2.6969307E7","587041","50","160","50","20"],["131","Malawi","Malawian","MWI","MW","Lilongwe","1.8628747E7","118484","50","160","50","20"],["132","Malaysia","Malaysian","MYS","MY","Kuala Lumpur","3.1949777E7","330803","30","100",null,"30"],["133","Maldives","Maldivian","MDV","MV","Mal�","530953.0","300","30","30",null,"30"],["134","Mali","Malian","MLI","ML","Bamako","1.9658031E7","1240192","50","160","10","20"],["135","Malta","Maltese","MLT","MT","Valletta","440372.0","316","20","70",null,"20"],["136","Marshall Islands","Marshallese","MHL","MH","Majuro","58791.0","181","40","50",null,"30"],["137","Martinique","Martiniquais","MTQ","MQ","Fort-de-France Bay","375554.0","1128","10","10","60","40"],["138","Mauritania","Mauritanian","MRT","MR","Nouakchott","4525696.0","1030700","50","160","10","20"],["139","Mauritius","Mauritian","MUS","MU","Port Louis","1269668.0","2040","50","160","50","20"],["140","Mayotte","Mahoran","MYT","YT","Mamoudzou","266150.0","374","50","160","50","20"],["141","Mexico","Mexican","MEX","MX","Mexico City","1.27575529E8","1964375","10","10","20","40"],["142","Micronesia (Federated States of)","Micronesian","FSM","FM","Palikir","113815.0","702","40","50",null,"30"],["143","Moldova, Republic of","Moldovan","MDA","MD","Chisinau","4043263.0","33846","20","140",null,"20"],["144","Monaco","Mon�gasque","MCO","MC","Monaco","38964.0",null,"20","150",null,"20"],["145","Mongolia","Mongolian","MNG","MN","Ulaanbaatar","3225167.0","1564110","30","60",null,"30"],["146","Montenegro","Montenegrin","MNE","ME","Podgorica","627987.0","13812","20","70",null,"20"],["147","Montserrat","Montserratian","MSR","MS","Plymouth","4989.0","102","10","10","60","40"],["148","Morocco","Moroccan","MAR","MA","Rabat","3.6471769E7","446550","50","40",null,"20"],["149","Mozambique","Mozambican","MOZ","MZ","Maputo","3.0366036E7","801590","50","160","50","20"],["150","Myanmar","Burmese","MMR","MM","Naypyidaw","5.404542E7","676578","30","100",null,"30"],["151","Namibia","Namibian","NAM","NA","Windhoek","2494530.0","825615","50","160","30","20"],["152","Nauru","Nauruan","NRU","NR","Yaren","10756.0","21","40","50",null,"30"],["153","Nepal","Nepali","NPL","NP","Kathmandu","2.860871E7","147181","30","30",null,"30"],["154","Netherlands","Dutch","NLD","NL","Amsterdam","1.709713E7","41850","20","150",null,"20"],["155","New Caledonia","New Caledonian","NCL","NC","Noum�a","282750.0","18575","40","130",null,"30"],["156","New Zealand","New Zealander","NZL","NZ","Wellington","4783063.0","270467","40","90",null,"30"],["157","Nicaragua","Nicaraguan","NIC","NI","Managua","6545502.0","130373","10","10","20","40"],["158","Niger","Nigerien","NER","NE","Niamey","2.3310715E7","1267000","50","160","10","20"],["159","Nigeria","Nigerian","NGA","NG","Abuja","2.00963599E8","923768","50","160","10","20"],["160","Niue","Niuean","NIU","NU","Alofi","1615.0","260","40","20",null,"30"],["161","Norfolk Island","Norfolk Island","NFK","NF","Kingston","1748.0","35","40","90",null,"30"],["162","North Korea (Democratic People's Republic of)","North Korean","PRK","KP","Pyongyang","2.5666161E7","120538","30","60",null,"30"],["163","North Macedonia","Macedonian","MKD","MK","Skopje","2083459.0","25713","20","70",null,"20"],["164","Northern Mariana Islands","Northern Marianan","MNP","MP","Saipan","57216.0","464","40","50",null,"30"],["165","Norway","Norwegian","NOR","NO","Oslo","5378857.0","323802","20","120",null,"20"],["166","Oman","Omani","OMN","OM","Muscat","4974986.0","309500","30","170",null,"30"],["167","Pakistan","Pakistani","PAK","PK","Islamabad","2.16565318E8","881912","30","30",null,"30"],["168","Palau","Palauan","PLW","PW","Ngerulmud","18008.0","459","40","50",null,"30"],["169","Palestine, State of","Palestinian","PSE","PS","Ramallah","4981420.0","6220","30","170",null,"30"],["170","Panama","Panamanian","PAN","PA","Panama City","4246439.0","75417","10","10","20","40"],["171","Papua New Guinea","Papua New Guinean","PNG","PG","Port Moresby","8776109.0","462840","40","130",null,"30"],["172","Paraguay","Paraguayan","PRY","PY","Asunci�n","7044636.0","406752","10","10","40","40"],["173","Peru","Peruvian","PER","PE","Lima","3.2510453E7","1285216","10","10","40","40"],["174","Philippines","Filipino","PHL","PH","Manila","1.08116615E8","342353","30","100",null,"30"],["175","Pitcairn","Pitcairn Island","PCN","PN","Adamstown","68.0","43","40","20",null,"30"],["176","Poland","Polish","POL","PL","Warsaw","3.7887768E7","312679","20","140",null,"20"],["177","Portugal","Portuguese","PRT","PT","Lisbon","1.0226187E7","92090","20","70",null,"20"],["178","Puerto Rico","Puerto Rican","PRI","PR","San Juan","2933408.0","8870","10","10","60","40"],["179","Qatar","Qatari","QAT","QA","Doha","2832067.0","11586","30","170",null,"30"],["180","Romania","Romanian","ROU","RO","Bucharest","1.9364557E7","238391","20","140",null,"20"],["181","Russian Federation","Russian","RUS","RU","Moscow","1.45872256E8","17098242","20","140",null,"20"],["182","Rwanda","Rwandan","RWA","RW","Kigali","1.262695E7","26338","50","160","50","20"],["183","R�union","R�unionese","REU","RE","Saint-Denis","888927.0","2511","50","160","50","20"],["184","Saint Barth�lemy","Barth�lemois","BLM","BL","Gustavia","9847.0","21","10","10","60","40"],["185","Saint Helena, Ascension and Tristan da Cunha","Ascension and Tristan da Cunha","SHN","SH","Jamestown","5633.0","394","50","160",null,"20"],["186","Saint Kitts and Nevis","Kittitian or Nevisian","KNA","KN","Basseterre","52823.0","261","10","10","60","40"],["187","Saint Lucia","Saint Lucian","LCA","LC","Castries","182790.0","616","10","10","60","40"],["188","Saint Martin (French part)","Saint-Martinoise","MAF","MF","Marigot","38002.0","53","10","10","60","40"],["189","Saint Pierre and Miquelon","Saint-Pierrais or Miquelonnais","SPM","PM","St. Pierre","5822.0","242","10","80",null,"40"],["190","Saint Vincent and the Grenadines","Saint Vincentian","VCT","VC","Kingstown","110589.0","389","10","10","60","40"],["191","Samoa","Samoan","WSM","WS","Apia","197097.0","2842","40","20",null,"30"],["192","San Marino","Sammarinese","SMR","SM","San Marino","33860.0","61","20","70",null,"20"],["193","Sao Tome and Principe","S�o Tom�an","STP","ST","Sao Tome","215056.0","964","50","160","80","20"],["194","Saudi Arabia","Saudi","SAU","SA","Riyadh","3.4268528E7","2149690","30","170",null,"30"],["195","Senegal","Senegalese","SEN","SN","Dakar","1.6296364E7","196722","50","160","10","20"],["196","Serbia","Serbian","SRB","RS","Belgrade","8772235.0","88361","20","70",null,"20"],["197","Seychelles","Seychellois","SYC","SC","Victoria","97739.0","452","50","160","50","20"],["198","Sierra Leone","Sierra Leonean","SLE","SL","Freetown","7813215.0","71740","50","160","10","20"],["199","Singapore","Singaporean","SGP","SG","Singapore","5804337.0","710","30","100",null,"30"],["200","Sint Maarten (Dutch part)","Sint Maarten","SXM","SX","Philipsburg","42388.0","34","10","10","60","40"],["201","Slovakia","Slovak","SVK","SK","Bratislava","5457013.0","49037","20","140",null,"20"],["202","Slovenia","Slovenian","SVN","SI","Ljubljana","2078654.0","20273","20","70",null,"20"],["203","Solomon Islands","Solomon Island","SLB","SB","Honiara","669823.0","28896","40","130",null,"30"],["204","Somalia","Somali","SOM","SO","Mogadishu","1.5442905E7","637657","50","160","50","20"],["205","South Africa","South African","ZAF","ZA","Pretoria","5.855827E7","1221037","50","160","30","20"],["206","South Georgia and the South Sandwich Islands","South Georgia or South Sandwich Islands","SGS","GS","Grytviken","30.0","3903","10","10","40","40"],["207","South Korea (Republic of)","South Korean","KOR","KR","Seoul","5.1225308E7","100210","30","60",null,"30"],["208","South Sudan","South Sudanese","SSD","SS","Juba","1.1062113E7","619745","50","160","50","20"],["209","Spain","Spanish","ESP","ES","Madrid","4.6736776E7","505992","20","70",null,"20"],["210","Sri Lanka","Sri Lankan","LKA","LK","Sri Jayawardenapura Kotte","2.1323733E7","65610","30","30",null,"30"],["211","Sudan","Sudanese","SDN","SD","Khartoum","4.2813238E7","1886068","50","40",null,"20"],["212","Suriname","Surinamese","SUR","SR","Paramaribo","581372.0","163820","10","10","40","40"],["213","Svalbard and Jan Mayen","Svalbard","SJM","SJ","Longyearbyen","2667.0","61399","20","120",null,"20"],["214","Sweden","Swedish","SWE","SE","Stockholm","1.0036379E7","450295","20","120",null,"20"],["215","Switzerland","Swiss","CHE","CH","Bern","8591365.0","41284","20","150",null,"20"],["216","Syrian Arab Republic","Syrian","SYR","SY","Damascus","1.7070135E7","185180","30","170",null,"30"],["217","Taiwan (Province of China)","Taiwanese","TWN","TW","Taipei","2.3773876E7","36193","30","60",null,"30"],["218","Tajikistan","Tajikistani","TJK","TJ","Dushanbe","9321018.0","143100","30","110",null,"30"],["219","Tanzania (United Republic of)","Tanzanian","TZA","TZ","Dodoma","5.8005463E7","945087","50","160",null,"20"],["220","Thailand","Thai","THA","TH","Bangkok","6.9625582E7","513120","30","100",null,"30"],["221","Timor-Leste","Timorese","TLS","TL","Dili","1293119.0","14874","30","100",null,"30"],["222","Togo","Togolese","TGO","TG","Lom�","8082366.0","56785","50","160","10","20"],["223","Tokelau","Tokelauan","TKL","TK","Nukunonu","1340.0","12","40","20",null,"30"],["224","Tonga","Tongan","TON","TO","Nuku�alofa","104494.0","747","40","20",null,"30"],["225","Trinidad and Tobago","Trinidadian or Tobagonian","TTO","TT","Port of Spain","1394973.0","5130","10","10","60","40"],["226","Tunisia","Tunisian","TUN","TN","Tunis","1.1694719E7","163610","50","40",null,"20"],["227","Turkey","Turkish","TUR","TR","Ankara","8.3429615E7","783562","30","170",null,"30"],["228","Turkmenistan","Turkmen","TKM","TM","Ashgabat","5942089.0","488100","30","110",null,"30"],["229","Turks and Caicos Islands","Turks and Caicos Island","TCA","TC","Cockburn Town","38191.0","948","10","10","60","40"],["230","Tuvalu","Tuvaluan","TUV","TV","Funafuti","11646.0","26","40","20",null,"30"],["231","Uganda","Ugandan","UGA","UG","Kampala","4.4269594E7","241550","50","160","50","20"],["232","Ukraine","Ukrainian","UKR","UA","Kiev","4.3993638E7","603500","20","140",null,"20"],["233","United Arab Emirates","Emirati","ARE","AE","Abu Dhabi","9770529.0","83600","30","170",null,"30"],["234","United Kingdom of Great Britain and Northern Ireland","British","GBR","GB","London","6.7530172E7","242900","20","120",null,"20"],["235","United States Minor Outlying Islands","American","UMI","UM",null,"300.0","34","40","50",null,"30"],["236","United States of America","American","USA","US","Washington, D.C.","3.29064917E8","9372610","10","80",null,"10"],["237","Uruguay","Uruguayan","URY","UY","Montevideo","3461734.0","181034","10","10","40","40"],["238","Uzbekistan","Uzbekistani","UZB","UZ","Tashkent","3.2981716E7","447400","30","110",null,"30"],["239","Vanuatu","Ni-Vanuatu","VUT","VU","Port Vila","299882.0","12189","40","130",null,"30"],["240","Venezuela (Bolivarian Republic of)","Venezuelan","VEN","VE","Caracas","2.8515829E7","916445","10","10","40","40"],["241","Vietnam","Vietnamese","VNM","VN","Hanoi","9.6462106E7","331212","30","100",null,"30"],["242","Virgin Islands (British)","British Virgin Island","VGB","VG","Road Town","30030.0","151","10","10","60","40"],["243","Virgin Islands (U.S.)","U.S. Virgin Island","VIR","VI","Charlotte Amalie","104578.0","347","10","10","60","40"],["244","Wallis and Futuna","Wallis and Futuna","WLF","WF","Mata-Utu","11432.0","142","40","20",null,"30"],["245","Western Sahara","Sahrawi","ESH","EH","La�youne","582463.0","266000","50","40",null,"20"],["246","Yemen","Yemeni","YEM","YE","Sana\\002Ca","2.9161922E7","527968","30","170",null,"30"],["247","Zambia","Zambian","ZMB","ZM","Lusaka","1.786103E7","752612","50","160","50","20"],["248","Zimbabwe","Zimbabwean","ZWE","ZW","Harare","1.4645468E7","390757","50","160","50","20"],["249","�land Islands","�land Island","ALA","AX","Mariehamn","29789.0","1580","20","120",null,"20"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"COUNTRY_ID","type":"\"string\"","metadata":"{}"},{"name":"NAME","type":"\"string\"","metadata":"{}"},{"name":"NATIONALITY","type":"\"string\"","metadata":"{}"},{"name":"COUNTRY_CODE","type":"\"string\"","metadata":"{}"},{"name":"ISO_ALPHA2","type":"\"string\"","metadata":"{}"},{"name":"CAPITAL","type":"\"string\"","metadata":"{}"},{"name":"POPULATION","type":"\"string\"","metadata":"{}"},{"name":"AREA_KM2","type":"\"string\"","metadata":"{}"},{"name":"REGION_ID","type":"\"string\"","metadata":"{}"},{"name":"SUB_REGION_ID","type":"\"string\"","metadata":"{}"},{"name":"INTERMEDIATE_REGION_ID","type":"\"string\"","metadata":"{}"},{"name":"ORGANIZATION_REGION_ID","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[],"columnCustomDisplayInfos":{},"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755627591,"submitTime":1663755627547,"finishTime":1663755627740,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",249]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"6c6ded13-7b79-44d9-b0c1-2e46a9ab38a9"},{"version":"CommandV1","origId":3603969348519666,"guid":"ebd0f741-c2dd-4f17-a8b5-cb934585840c","subtype":"command","commandType":"auto","position":10.0,"command":"# Partitioning the Dataframe file when writing it as a csv\ndf.write.options(header=True).mode('overwrite').partitionBy('REGION_ID','SUB_REGION_ID').csv('/FileStore/tables/countries_out')","commandVersion":42,"state":"error","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"org.apache.spark.SparkException: Job aborted.","errorTraceType":"html","error":"<div class=\"ansiout\"><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">Py4JJavaError</span>                             Traceback (most recent call last)\n<span class=\"ansi-green-fg\">&lt;command-2755532042045976&gt;</span> in <span class=\"ansi-cyan-fg\">&lt;module&gt;</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span><span class=\"ansi-red-fg\"> </span>df<span class=\"ansi-blue-fg\">.</span>write<span class=\"ansi-blue-fg\">.</span>options<span class=\"ansi-blue-fg\">(</span>header<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-green-fg\">True</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">.</span>mode<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#39;overwrite&#39;</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">.</span>partitionBy<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#39;REGION_ID&#39;</span><span class=\"ansi-blue-fg\">,</span><span class=\"ansi-blue-fg\">&#39;SUB_REGION_ID&#39;</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">.</span>csv<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#39;/FileStore/tables/countries_out&#39;</span><span class=\"ansi-blue-fg\">)</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/pyspark/sql/readwriter.py</span> in <span class=\"ansi-cyan-fg\">csv</span><span class=\"ansi-blue-fg\">(self, path, mode, compression, sep, quote, escape, header, nullValue, escapeQuotes, quoteAll, dateFormat, timestampFormat, ignoreLeadingWhiteSpace, ignoreTrailingWhiteSpace, charToEscapeQuoteEscaping, encoding, emptyValue, lineSep)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    953</span>                        charToEscapeQuoteEscaping<span class=\"ansi-blue-fg\">=</span>charToEscapeQuoteEscaping<span class=\"ansi-blue-fg\">,</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    954</span>                        encoding=encoding, emptyValue=emptyValue, lineSep=lineSep)\n<span class=\"ansi-green-fg\">--&gt; 955</span><span class=\"ansi-red-fg\">         </span>self<span class=\"ansi-blue-fg\">.</span>_jwrite<span class=\"ansi-blue-fg\">.</span>csv<span class=\"ansi-blue-fg\">(</span>path<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    956</span> \n<span class=\"ansi-green-intense-fg ansi-bold\">    957</span>     <span class=\"ansi-green-fg\">def</span> orc<span class=\"ansi-blue-fg\">(</span>self<span class=\"ansi-blue-fg\">,</span> path<span class=\"ansi-blue-fg\">,</span> mode<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-green-fg\">None</span><span class=\"ansi-blue-fg\">,</span> partitionBy<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-green-fg\">None</span><span class=\"ansi-blue-fg\">,</span> compression<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-green-fg\">None</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">:</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/lib/py4j-0.10.9.1-src.zip/py4j/java_gateway.py</span> in <span class=\"ansi-cyan-fg\">__call__</span><span class=\"ansi-blue-fg\">(self, *args)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   1302</span> \n<span class=\"ansi-green-intense-fg ansi-bold\">   1303</span>         answer <span class=\"ansi-blue-fg\">=</span> self<span class=\"ansi-blue-fg\">.</span>gateway_client<span class=\"ansi-blue-fg\">.</span>send_command<span class=\"ansi-blue-fg\">(</span>command<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-fg\">-&gt; 1304</span><span class=\"ansi-red-fg\">         return_value = get_return_value(\n</span><span class=\"ansi-green-intense-fg ansi-bold\">   1305</span>             answer, self.gateway_client, self.target_id, self.name)\n<span class=\"ansi-green-intense-fg ansi-bold\">   1306</span> \n\n<span class=\"ansi-green-fg\">/databricks/spark/python/pyspark/sql/utils.py</span> in <span class=\"ansi-cyan-fg\">deco</span><span class=\"ansi-blue-fg\">(*a, **kw)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    115</span>     <span class=\"ansi-green-fg\">def</span> deco<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">*</span>a<span class=\"ansi-blue-fg\">,</span> <span class=\"ansi-blue-fg\">**</span>kw<span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    116</span>         <span class=\"ansi-green-fg\">try</span><span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-fg\">--&gt; 117</span><span class=\"ansi-red-fg\">             </span><span class=\"ansi-green-fg\">return</span> f<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">*</span>a<span class=\"ansi-blue-fg\">,</span> <span class=\"ansi-blue-fg\">**</span>kw<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    118</span>         <span class=\"ansi-green-fg\">except</span> py4j<span class=\"ansi-blue-fg\">.</span>protocol<span class=\"ansi-blue-fg\">.</span>Py4JJavaError <span class=\"ansi-green-fg\">as</span> e<span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    119</span>             converted <span class=\"ansi-blue-fg\">=</span> convert_exception<span class=\"ansi-blue-fg\">(</span>e<span class=\"ansi-blue-fg\">.</span>java_exception<span class=\"ansi-blue-fg\">)</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/lib/py4j-0.10.9.1-src.zip/py4j/protocol.py</span> in <span class=\"ansi-cyan-fg\">get_return_value</span><span class=\"ansi-blue-fg\">(answer, gateway_client, target_id, name)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    324</span>             value <span class=\"ansi-blue-fg\">=</span> OUTPUT_CONVERTER<span class=\"ansi-blue-fg\">[</span>type<span class=\"ansi-blue-fg\">]</span><span class=\"ansi-blue-fg\">(</span>answer<span class=\"ansi-blue-fg\">[</span><span class=\"ansi-cyan-fg\">2</span><span class=\"ansi-blue-fg\">:</span><span class=\"ansi-blue-fg\">]</span><span class=\"ansi-blue-fg\">,</span> gateway_client<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    325</span>             <span class=\"ansi-green-fg\">if</span> answer<span class=\"ansi-blue-fg\">[</span><span class=\"ansi-cyan-fg\">1</span><span class=\"ansi-blue-fg\">]</span> <span class=\"ansi-blue-fg\">==</span> REFERENCE_TYPE<span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-fg\">--&gt; 326</span><span class=\"ansi-red-fg\">                 raise Py4JJavaError(\n</span><span class=\"ansi-green-intense-fg ansi-bold\">    327</span>                     <span class=\"ansi-blue-fg\">&#34;An error occurred while calling {0}{1}{2}.\\n&#34;</span><span class=\"ansi-blue-fg\">.</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    328</span>                     format(target_id, &#34;.&#34;, name), value)\n\n<span class=\"ansi-red-fg\">Py4JJavaError</span>: An error occurred while calling o1052.csv.\n: org.apache.spark.SparkException: Job aborted.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.jobAbortedError(QueryExecutionErrors.scala:606)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:360)\n\tat org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:198)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:126)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:124)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.executeCollect(commands.scala:138)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$$nestedInanonfun$eagerlyExecuteCommands$1$1.$anonfun$applyOrElse$1(QueryExecution.scala:160)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$8(SQLExecution.scala:239)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:386)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$1(SQLExecution.scala:186)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:968)\n\tat org.apache.spark.sql.execution.SQLExecution$.withCustomExecutionEnv(SQLExecution.scala:141)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:336)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$$nestedInanonfun$eagerlyExecuteCommands$1$1.applyOrElse(QueryExecution.scala:160)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$$nestedInanonfun$eagerlyExecuteCommands$1$1.applyOrElse(QueryExecution.scala:156)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:575)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:167)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:575)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:30)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:268)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:264)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:30)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:30)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:551)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:156)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:324)\n\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:156)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:141)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:132)\n\tat org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:186)\n\tat org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:959)\n\tat org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:427)\n\tat org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:396)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:250)\n\tat org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:950)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:380)\n\tat py4j.Gateway.invoke(Gateway.java:295)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:251)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 61.0 failed 4 times, most recent failure: Lost task 0.3 in stage 61.0 (TID 69) (10.139.64.4 executor driver): org.apache.spark.SparkException: Task failed while writing rows.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:610)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.executeTask(FileFormatWriter.scala:457)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$write$20(FileFormatWriter.scala:336)\n\tat org.apache.spark.scheduler.ResultTask.$anonfun$runTask$3(ResultTask.scala:75)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.ResultTask.$anonfun$runTask$1(ResultTask.scala:75)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:55)\n\tat org.apache.spark.scheduler.Task.doRunTask(Task.scala:156)\n\tat org.apache.spark.scheduler.Task.$anonfun$run$1(Task.scala:125)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:95)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$13(Executor.scala:832)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1681)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:835)\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:690)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: com.databricks.sql.io.FileReadException: Error while reading file dbfs:/FileStore/tables/countries_out/part-00000-tid-3926611488193324740-d29d1b69-7e45-4d05-9a52-aefa8dc24e97-43-1-c000.csv. It is possible the underlying files have been updated. You can explicitly invalidate the cache in Spark by running &#39;REFRESH TABLE tableName&#39; command in SQL or by recreating the Dataset/DataFrame involved. If Delta cache is stale or the underlying files have been removed, you can invalidate Delta cache manually by restarting the cluster.\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.logFileNameAndThrow(FileScanRDD.scala:521)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.getNext(FileScanRDD.scala:473)\n\tat org.apache.spark.util.NextIterator.hasNext(NextIterator.scala:73)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:614)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.$anonfun$hasNext$1(FileScanRDD.scala:356)\n\tat scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:351)\n\tat scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)\n\tat scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)\n\tat org.apache.spark.sql.execution.UnsafeExternalRowSorter.sort(UnsafeExternalRowSorter.java:240)\n\tat org.apache.spark.sql.execution.SortExec$$anon$2.sortedIterator(SortExec.scala:133)\n\tat org.apache.spark.sql.execution.SortExec$$anon$2.hasNext(SortExec.scala:147)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:90)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$executeTask$2(FileFormatWriter.scala:437)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1715)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.executeTask(FileFormatWriter.scala:444)\n\t... 19 more\nCaused by: java.io.FileNotFoundException: /7588025375838496/FileStore/tables/countries_out/part-00000-tid-3926611488193324740-d29d1b69-7e45-4d05-9a52-aefa8dc24e97-43-1-c000.csv\n\tat shaded.databricks.org.apache.hadoop.fs.azure.NativeAzureFileSystem.open(NativeAzureFileSystem.java:2967)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.$anonfun$open$2(DatabricksFileSystemV2.scala:577)\n\tat com.databricks.s3a.S3AExceptionUtils$.convertAWSExceptionToJavaIOException(DatabricksStreamUtils.scala:66)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.$anonfun$open$1(DatabricksFileSystemV2.scala:575)\n\tat com.databricks.logging.UsageLogging.$anonfun$recordOperation$1(UsageLogging.scala:330)\n\tat com.databricks.logging.UsageLogging.executeThunkAndCaptureResultTags$1(UsageLogging.scala:424)\n\tat com.databricks.logging.UsageLogging.$anonfun$recordOperationWithResultTags$4(UsageLogging.scala:444)\n\tat com.databricks.logging.Log4jUsageLoggingShim$.$anonfun$withAttributionContext$1(Log4jUsageLoggingShim.scala:33)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)\n\tat com.databricks.logging.AttributionContext$.withValue(AttributionContext.scala:94)\n\tat com.databricks.logging.Log4jUsageLoggingShim$.withAttributionContext(Log4jUsageLoggingShim.scala:31)\n\tat com.databricks.logging.UsageLogging.withAttributionContext(UsageLogging.scala:205)\n\tat com.databricks.logging.UsageLogging.withAttributionContext$(UsageLogging.scala:204)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.withAttributionContext(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.withAttributionTags(UsageLogging.scala:240)\n\tat com.databricks.logging.UsageLogging.withAttributionTags$(UsageLogging.scala:225)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.withAttributionTags(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.recordOperationWithResultTags(UsageLogging.scala:419)\n\tat com.databricks.logging.UsageLogging.recordOperationWithResultTags$(UsageLogging.scala:339)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.recordOperationWithResultTags(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.recordOperation(UsageLogging.scala:330)\n\tat com.databricks.logging.UsageLogging.recordOperation$(UsageLogging.scala:302)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.recordOperation(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.open(DatabricksFileSystemV2.scala:575)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystem.open(DatabricksFileSystem.scala:87)\n\tat com.databricks.spark.metrics.FileSystemWithMetrics.open(FileSystemWithMetrics.scala:336)\n\tat org.apache.hadoop.fs.FileSystem.lambda$openFileWithOptions$0(FileSystem.java:4633)\n\tat org.apache.hadoop.util.LambdaUtils.eval(LambdaUtils.java:52)\n\tat org.apache.hadoop.fs.FileSystem.openFileWithOptions(FileSystem.java:4631)\n\tat org.apache.hadoop.fs.FileSystem$FSDataInputStreamBuilder.build(FileSystem.java:4768)\n\tat org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:92)\n\tat org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.&lt;init&gt;(HadoopFileLinesReader.scala:65)\n\tat org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource.readFile(CSVDataSource.scala:108)\n\tat org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$4(CSVFileFormat.scala:167)\n\tat org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:157)\n\tat org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:144)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.getNext(FileScanRDD.scala:457)\n\t... 34 more\n\nDriver stacktrace:\n\tat org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:3029)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2976)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2970)\n\tat scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)\n\tat scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2970)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1390)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1390)\n\tat scala.Option.foreach(Option.scala:407)\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1390)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3238)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:3179)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:3167)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)\n\tat org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:1152)\n\tat org.apache.spark.SparkContext.runJobInternal(SparkContext.scala:2651)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2634)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:325)\n\t... 44 more\nCaused by: org.apache.spark.SparkException: Task failed while writing rows.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:610)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.executeTask(FileFormatWriter.scala:457)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$write$20(FileFormatWriter.scala:336)\n\tat org.apache.spark.scheduler.ResultTask.$anonfun$runTask$3(ResultTask.scala:75)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.ResultTask.$anonfun$runTask$1(ResultTask.scala:75)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:55)\n\tat org.apache.spark.scheduler.Task.doRunTask(Task.scala:156)\n\tat org.apache.spark.scheduler.Task.$anonfun$run$1(Task.scala:125)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:95)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$13(Executor.scala:832)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1681)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:835)\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:690)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\t... 1 more\nCaused by: com.databricks.sql.io.FileReadException: Error while reading file dbfs:/FileStore/tables/countries_out/part-00000-tid-3926611488193324740-d29d1b69-7e45-4d05-9a52-aefa8dc24e97-43-1-c000.csv. It is possible the underlying files have been updated. You can explicitly invalidate the cache in Spark by running &#39;REFRESH TABLE tableName&#39; command in SQL or by recreating the Dataset/DataFrame involved. If Delta cache is stale or the underlying files have been removed, you can invalidate Delta cache manually by restarting the cluster.\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.logFileNameAndThrow(FileScanRDD.scala:521)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.getNext(FileScanRDD.scala:473)\n\tat org.apache.spark.util.NextIterator.hasNext(NextIterator.scala:73)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:614)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.$anonfun$hasNext$1(FileScanRDD.scala:356)\n\tat scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:351)\n\tat scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)\n\tat scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)\n\tat org.apache.spark.sql.execution.UnsafeExternalRowSorter.sort(UnsafeExternalRowSorter.java:240)\n\tat org.apache.spark.sql.execution.SortExec$$anon$2.sortedIterator(SortExec.scala:133)\n\tat org.apache.spark.sql.execution.SortExec$$anon$2.hasNext(SortExec.scala:147)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:90)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$executeTask$2(FileFormatWriter.scala:437)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1715)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.executeTask(FileFormatWriter.scala:444)\n\t... 19 more\nCaused by: java.io.FileNotFoundException: /7588025375838496/FileStore/tables/countries_out/part-00000-tid-3926611488193324740-d29d1b69-7e45-4d05-9a52-aefa8dc24e97-43-1-c000.csv\n\tat shaded.databricks.org.apache.hadoop.fs.azure.NativeAzureFileSystem.open(NativeAzureFileSystem.java:2967)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.$anonfun$open$2(DatabricksFileSystemV2.scala:577)\n\tat com.databricks.s3a.S3AExceptionUtils$.convertAWSExceptionToJavaIOException(DatabricksStreamUtils.scala:66)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.$anonfun$open$1(DatabricksFileSystemV2.scala:575)\n\tat com.databricks.logging.UsageLogging.$anonfun$recordOperation$1(UsageLogging.scala:330)\n\tat com.databricks.logging.UsageLogging.executeThunkAndCaptureResultTags$1(UsageLogging.scala:424)\n\tat com.databricks.logging.UsageLogging.$anonfun$recordOperationWithResultTags$4(UsageLogging.scala:444)\n\tat com.databricks.logging.Log4jUsageLoggingShim$.$anonfun$withAttributionContext$1(Log4jUsageLoggingShim.scala:33)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)\n\tat com.databricks.logging.AttributionContext$.withValue(AttributionContext.scala:94)\n\tat com.databricks.logging.Log4jUsageLoggingShim$.withAttributionContext(Log4jUsageLoggingShim.scala:31)\n\tat com.databricks.logging.UsageLogging.withAttributionContext(UsageLogging.scala:205)\n\tat com.databricks.logging.UsageLogging.withAttributionContext$(UsageLogging.scala:204)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.withAttributionContext(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.withAttributionTags(UsageLogging.scala:240)\n\tat com.databricks.logging.UsageLogging.withAttributionTags$(UsageLogging.scala:225)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.withAttributionTags(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.recordOperationWithResultTags(UsageLogging.scala:419)\n\tat com.databricks.logging.UsageLogging.recordOperationWithResultTags$(UsageLogging.scala:339)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.recordOperationWithResultTags(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.recordOperation(UsageLogging.scala:330)\n\tat com.databricks.logging.UsageLogging.recordOperation$(UsageLogging.scala:302)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.recordOperation(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.open(DatabricksFileSystemV2.scala:575)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystem.open(DatabricksFileSystem.scala:87)\n\tat com.databricks.spark.metrics.FileSystemWithMetrics.open(FileSystemWithMetrics.scala:336)\n\tat org.apache.hadoop.fs.FileSystem.lambda$openFileWithOptions$0(FileSystem.java:4633)\n\tat org.apache.hadoop.util.LambdaUtils.eval(LambdaUtils.java:52)\n\tat org.apache.hadoop.fs.FileSystem.openFileWithOptions(FileSystem.java:4631)\n\tat org.apache.hadoop.fs.FileSystem$FSDataInputStreamBuilder.build(FileSystem.java:4768)\n\tat org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:92)\n\tat org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.&lt;init&gt;(HadoopFileLinesReader.scala:65)\n\tat org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource.readFile(CSVDataSource.scala:108)\n\tat org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$4(CSVFileFormat.scala:167)\n\tat org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:157)\n\tat org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:144)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.getNext(FileScanRDD.scala:457)\n\t... 34 more\n</div>","errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663756037283,"submitTime":1663756037283,"finishTime":1663756038203,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"e22e9c2c-fd69-4246-b334-257cc00edba4"},{"version":"CommandV1","origId":3603969348519667,"guid":"68dba131-3e39-44e7-b282-da390e8cb3a2","subtype":"command","commandType":"auto","position":11.0,"command":"# Reading an individual partition, you will need to pass in your specific file path\ndf2 = spark.read.csv('/FileStore/tables/countries_out/REGION_ID=10/part-00000-tid-7249390748988995848-2cdbc933-38c8-41ff-979e-8504e6f4a9dd-51-1.c000.csv', header=True)","commandVersion":27,"state":"finished","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df2","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"COUNTRY_ID","nullable":true,"type":"string"},{"metadata":{},"name":"NAME","nullable":true,"type":"string"},{"metadata":{},"name":"NATIONALITY","nullable":true,"type":"string"},{"metadata":{},"name":"COUNTRY_CODE","nullable":true,"type":"string"},{"metadata":{},"name":"ISO_ALPHA2","nullable":true,"type":"string"},{"metadata":{},"name":"CAPITAL","nullable":true,"type":"string"},{"metadata":{},"name":"POPULATION","nullable":true,"type":"string"},{"metadata":{},"name":"AREA_KM2","nullable":true,"type":"string"},{"metadata":{},"name":"SUB_REGION_ID","nullable":true,"type":"string"},{"metadata":{},"name":"INTERMEDIATE_REGION_ID","nullable":true,"type":"string"},{"metadata":{},"name":"ORGANIZATION_REGION_ID","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755860652,"submitTime":1663755860613,"finishTime":1663755860894,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"ef2b0a2b-4823-4641-a5df-fc055b5b7321"},{"version":"CommandV1","origId":3603969348519668,"guid":"c7b09ede-bc9a-4827-88c9-7f92c7682f3d","subtype":"command","commandType":"auto","position":12.0,"command":"display(df2)","commandVersion":4,"state":"finished","results":{"type":"listResults","data":[{"type":"table","data":[["7","Anguilla","Anguillan","AIA","AI","The Valley","14869.0","91","10","60","40"],["9","Antigua and Barbuda","Antiguan or Barbudan","ATG","AG","St. John's","97118.0","442","10","60","40"],["10","Argentina","Argentine","ARG","AR","Buenos Aires","4.4780677E7","2780400","10","40","40"],["12","Aruba","Aruban","ABW","AW","Oranjestad","106314.0","180","10","60","40"],["16","Bahamas","Bahamian","BHS","BS","Nassau","389482.0","13943","10","60","40"],["19","Barbados","Barbadian","BRB","BB","Bridgetown","287025.0","430","10","60","40"],["22","Belize","Belizean","BLZ","BZ","Belmopan","390353.0","22966","10","20","40"],["24","Bermuda","Bermudian","BMU","BM","Hamilton","62506.0","54","80",null,"40"],["26","Bolivia (Plurinational State of)","Bolivian","BOL","BO","Sucre","1.15131E7","1098581","10","40","40"],["27","Bonaire, Sint Eustatius and Saba","Sint Eustatius and Saba","BES","BQ","Kralendijk","25711.0","328","10",null,"40"],["30","Bouvet Island","Bouvet Island","BVT","BV",null,"0.0","49","10","40","40"],["31","Brazil","Brazilian","BRA","BR","Bras�lia","2.11049527E8","8515767","10","40","40"],["40","Canada","Canadian","CAN","CA","Ottawa","3.7411047E7","9984670","80",null,"10"],["41","Cayman Islands","Caymanian","CYM","KY","George Town","64948.0","264","10","60","40"],["44","Chile","Chilean","CHL","CL","Santiago","1.8952038E7","756102","10","40","40"],["48","Colombia","Colombian","COL","CO","Bogota","5.0339443E7","1141748","10","40","40"],["53","Costa Rica","Costa Rican","CRI","CR","San Jos�","5047561.0","51100","10","20","40"],["55","Cuba","Cuban","CUB","CU","Havana","1.1333483E7","109884","10","60","40"],["56","Cura�ao","Cura�aoan","CUW","CW","Willemstad","163424.0","444","10","60","40"],["62","Dominica","Dominican","DMA","DM","Roseau","71808.0","751","10","60","40"],["63","Dominican Republic","Dominican","DOM","DO","Santo Domingo","1.0738958E7","48671","10","60","40"],["64","Ecuador","Ecuadorian","ECU","EC","Quito","1.7373662E7","276841","10","40","40"],["66","El Salvador","Salvadoran","SLV","SV","San Salvador","6453553.0","21041","10","20","40"],["72","Falkland Islands (Malvinas)","Falkland Island","FLK","FK","Stanley","3377.0","12173","10","40","40"],["77","French Guiana","French Guianese","GUF","GF","Cayenne","290832.0","83534","10","40","40"],["87","Greenland","Greenlandic","GRL","GL","Nuuk","56672.0","2166086","80",null,"20"],["88","Grenada","Grenadian","GRD","GD","St. George's","112003.0","344","10","60","40"],["89","Guadeloupe","Guadeloupe","GLP","GP","Basse Terre","400056.0","1628","10","60","40"],["91","Guatemala","Guatemalan","GTM","GT","Guatemala City","1.7581472E7","108889","10","20","40"],["95","Guyana","Guyanese","GUY","GY","Georgetown","782766.0","214969","10","40","40"],["96","Haiti","Haitian","HTI","HT","Port-au-Prince","1.1263077E7","27750","10","60","40"],["99","Honduras","Honduran","HND","HN","Tegucigalpa","9746117.0","112492","10","20","40"],["111","Jamaica","Jamaican","JAM","JM","Kingston","2948279.0","10991","10","60","40"],["137","Martinique","Martiniquais","MTQ","MQ","Fort-de-France Bay","375554.0","1128","10","60","40"],["141","Mexico","Mexican","MEX","MX","Mexico City","1.27575529E8","1964375","10","20","40"],["147","Montserrat","Montserratian","MSR","MS","Plymouth","4989.0","102","10","60","40"],["157","Nicaragua","Nicaraguan","NIC","NI","Managua","6545502.0","130373","10","20","40"],["170","Panama","Panamanian","PAN","PA","Panama City","4246439.0","75417","10","20","40"],["172","Paraguay","Paraguayan","PRY","PY","Asunci�n","7044636.0","406752","10","40","40"],["173","Peru","Peruvian","PER","PE","Lima","3.2510453E7","1285216","10","40","40"],["178","Puerto Rico","Puerto Rican","PRI","PR","San Juan","2933408.0","8870","10","60","40"],["184","Saint Barth�lemy","Barth�lemois","BLM","BL","Gustavia","9847.0","21","10","60","40"],["186","Saint Kitts and Nevis","Kittitian or Nevisian","KNA","KN","Basseterre","52823.0","261","10","60","40"],["187","Saint Lucia","Saint Lucian","LCA","LC","Castries","182790.0","616","10","60","40"],["188","Saint Martin (French part)","Saint-Martinoise","MAF","MF","Marigot","38002.0","53","10","60","40"],["189","Saint Pierre and Miquelon","Saint-Pierrais or Miquelonnais","SPM","PM","St. Pierre","5822.0","242","80",null,"40"],["190","Saint Vincent and the Grenadines","Saint Vincentian","VCT","VC","Kingstown","110589.0","389","10","60","40"],["200","Sint Maarten (Dutch part)","Sint Maarten","SXM","SX","Philipsburg","42388.0","34","10","60","40"],["206","South Georgia and the South Sandwich Islands","South Georgia or South Sandwich Islands","SGS","GS","Grytviken","30.0","3903","10","40","40"],["212","Suriname","Surinamese","SUR","SR","Paramaribo","581372.0","163820","10","40","40"],["225","Trinidad and Tobago","Trinidadian or Tobagonian","TTO","TT","Port of Spain","1394973.0","5130","10","60","40"],["229","Turks and Caicos Islands","Turks and Caicos Island","TCA","TC","Cockburn Town","38191.0","948","10","60","40"],["236","United States of America","American","USA","US","Washington, D.C.","3.29064917E8","9372610","80",null,"10"],["237","Uruguay","Uruguayan","URY","UY","Montevideo","3461734.0","181034","10","40","40"],["240","Venezuela (Bolivarian Republic of)","Venezuelan","VEN","VE","Caracas","2.8515829E7","916445","10","40","40"],["242","Virgin Islands (British)","British Virgin Island","VGB","VG","Road Town","30030.0","151","10","60","40"],["243","Virgin Islands (U.S.)","U.S. Virgin Island","VIR","VI","Charlotte Amalie","104578.0","347","10","60","40"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"COUNTRY_ID","type":"\"string\"","metadata":"{}"},{"name":"NAME","type":"\"string\"","metadata":"{}"},{"name":"NATIONALITY","type":"\"string\"","metadata":"{}"},{"name":"COUNTRY_CODE","type":"\"string\"","metadata":"{}"},{"name":"ISO_ALPHA2","type":"\"string\"","metadata":"{}"},{"name":"CAPITAL","type":"\"string\"","metadata":"{}"},{"name":"POPULATION","type":"\"string\"","metadata":"{}"},{"name":"AREA_KM2","type":"\"string\"","metadata":"{}"},{"name":"SUB_REGION_ID","type":"\"string\"","metadata":"{}"},{"name":"INTERMEDIATE_REGION_ID","type":"\"string\"","metadata":"{}"},{"name":"ORGANIZATION_REGION_ID","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[],"columnCustomDisplayInfos":{},"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663755862114,"submitTime":1663755862079,"finishTime":1663755862219,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",57]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"6d6a4096-5195-408b-9614-f23508a5b92a"},{"version":"CommandV1","origId":3603969348519669,"guid":"a1765931-d707-4b78-b336-3aa9c9bcb1f2","subtype":"command","commandType":"auto","position":14.0,"command":"# writing a csv file\ndf.write.mode('overwrite').partitionBy('REGION_ID','SUB_REGION_ID').csv('/FileStore/tables/countries_out_2', header=True)","commandVersion":10,"state":"error","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"org.apache.spark.SparkException: Job aborted.","errorTraceType":"html","error":"<div class=\"ansiout\"><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">Py4JJavaError</span>                             Traceback (most recent call last)\n<span class=\"ansi-green-fg\">&lt;command-2755532042045980&gt;</span> in <span class=\"ansi-cyan-fg\">&lt;module&gt;</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span><span class=\"ansi-red-fg\"> </span>df<span class=\"ansi-blue-fg\">.</span>write<span class=\"ansi-blue-fg\">.</span>mode<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#39;overwrite&#39;</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">.</span>partitionBy<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#39;REGION_ID&#39;</span><span class=\"ansi-blue-fg\">,</span><span class=\"ansi-blue-fg\">&#39;SUB_REGION_ID&#39;</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">.</span>csv<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#39;/FileStore/tables/countries_out_2&#39;</span><span class=\"ansi-blue-fg\">,</span> header<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-green-fg\">True</span><span class=\"ansi-blue-fg\">)</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/pyspark/sql/readwriter.py</span> in <span class=\"ansi-cyan-fg\">csv</span><span class=\"ansi-blue-fg\">(self, path, mode, compression, sep, quote, escape, header, nullValue, escapeQuotes, quoteAll, dateFormat, timestampFormat, ignoreLeadingWhiteSpace, ignoreTrailingWhiteSpace, charToEscapeQuoteEscaping, encoding, emptyValue, lineSep)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    953</span>                        charToEscapeQuoteEscaping<span class=\"ansi-blue-fg\">=</span>charToEscapeQuoteEscaping<span class=\"ansi-blue-fg\">,</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    954</span>                        encoding=encoding, emptyValue=emptyValue, lineSep=lineSep)\n<span class=\"ansi-green-fg\">--&gt; 955</span><span class=\"ansi-red-fg\">         </span>self<span class=\"ansi-blue-fg\">.</span>_jwrite<span class=\"ansi-blue-fg\">.</span>csv<span class=\"ansi-blue-fg\">(</span>path<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    956</span> \n<span class=\"ansi-green-intense-fg ansi-bold\">    957</span>     <span class=\"ansi-green-fg\">def</span> orc<span class=\"ansi-blue-fg\">(</span>self<span class=\"ansi-blue-fg\">,</span> path<span class=\"ansi-blue-fg\">,</span> mode<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-green-fg\">None</span><span class=\"ansi-blue-fg\">,</span> partitionBy<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-green-fg\">None</span><span class=\"ansi-blue-fg\">,</span> compression<span class=\"ansi-blue-fg\">=</span><span class=\"ansi-green-fg\">None</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">:</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/lib/py4j-0.10.9.1-src.zip/py4j/java_gateway.py</span> in <span class=\"ansi-cyan-fg\">__call__</span><span class=\"ansi-blue-fg\">(self, *args)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   1302</span> \n<span class=\"ansi-green-intense-fg ansi-bold\">   1303</span>         answer <span class=\"ansi-blue-fg\">=</span> self<span class=\"ansi-blue-fg\">.</span>gateway_client<span class=\"ansi-blue-fg\">.</span>send_command<span class=\"ansi-blue-fg\">(</span>command<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-fg\">-&gt; 1304</span><span class=\"ansi-red-fg\">         return_value = get_return_value(\n</span><span class=\"ansi-green-intense-fg ansi-bold\">   1305</span>             answer, self.gateway_client, self.target_id, self.name)\n<span class=\"ansi-green-intense-fg ansi-bold\">   1306</span> \n\n<span class=\"ansi-green-fg\">/databricks/spark/python/pyspark/sql/utils.py</span> in <span class=\"ansi-cyan-fg\">deco</span><span class=\"ansi-blue-fg\">(*a, **kw)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    115</span>     <span class=\"ansi-green-fg\">def</span> deco<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">*</span>a<span class=\"ansi-blue-fg\">,</span> <span class=\"ansi-blue-fg\">**</span>kw<span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    116</span>         <span class=\"ansi-green-fg\">try</span><span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-fg\">--&gt; 117</span><span class=\"ansi-red-fg\">             </span><span class=\"ansi-green-fg\">return</span> f<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">*</span>a<span class=\"ansi-blue-fg\">,</span> <span class=\"ansi-blue-fg\">**</span>kw<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    118</span>         <span class=\"ansi-green-fg\">except</span> py4j<span class=\"ansi-blue-fg\">.</span>protocol<span class=\"ansi-blue-fg\">.</span>Py4JJavaError <span class=\"ansi-green-fg\">as</span> e<span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    119</span>             converted <span class=\"ansi-blue-fg\">=</span> convert_exception<span class=\"ansi-blue-fg\">(</span>e<span class=\"ansi-blue-fg\">.</span>java_exception<span class=\"ansi-blue-fg\">)</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/lib/py4j-0.10.9.1-src.zip/py4j/protocol.py</span> in <span class=\"ansi-cyan-fg\">get_return_value</span><span class=\"ansi-blue-fg\">(answer, gateway_client, target_id, name)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    324</span>             value <span class=\"ansi-blue-fg\">=</span> OUTPUT_CONVERTER<span class=\"ansi-blue-fg\">[</span>type<span class=\"ansi-blue-fg\">]</span><span class=\"ansi-blue-fg\">(</span>answer<span class=\"ansi-blue-fg\">[</span><span class=\"ansi-cyan-fg\">2</span><span class=\"ansi-blue-fg\">:</span><span class=\"ansi-blue-fg\">]</span><span class=\"ansi-blue-fg\">,</span> gateway_client<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    325</span>             <span class=\"ansi-green-fg\">if</span> answer<span class=\"ansi-blue-fg\">[</span><span class=\"ansi-cyan-fg\">1</span><span class=\"ansi-blue-fg\">]</span> <span class=\"ansi-blue-fg\">==</span> REFERENCE_TYPE<span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-fg\">--&gt; 326</span><span class=\"ansi-red-fg\">                 raise Py4JJavaError(\n</span><span class=\"ansi-green-intense-fg ansi-bold\">    327</span>                     <span class=\"ansi-blue-fg\">&#34;An error occurred while calling {0}{1}{2}.\\n&#34;</span><span class=\"ansi-blue-fg\">.</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    328</span>                     format(target_id, &#34;.&#34;, name), value)\n\n<span class=\"ansi-red-fg\">Py4JJavaError</span>: An error occurred while calling o1136.csv.\n: org.apache.spark.SparkException: Job aborted.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.jobAbortedError(QueryExecutionErrors.scala:606)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:360)\n\tat org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:198)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:126)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:124)\n\tat org.apache.spark.sql.execution.command.DataWritingCommandExec.executeCollect(commands.scala:138)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$$nestedInanonfun$eagerlyExecuteCommands$1$1.$anonfun$applyOrElse$1(QueryExecution.scala:160)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$8(SQLExecution.scala:239)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:386)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$1(SQLExecution.scala:186)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:968)\n\tat org.apache.spark.sql.execution.SQLExecution$.withCustomExecutionEnv(SQLExecution.scala:141)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:336)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$$nestedInanonfun$eagerlyExecuteCommands$1$1.applyOrElse(QueryExecution.scala:160)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$$nestedInanonfun$eagerlyExecuteCommands$1$1.applyOrElse(QueryExecution.scala:156)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:575)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:167)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:575)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:30)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:268)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:264)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:30)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:30)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:551)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:156)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:324)\n\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:156)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:141)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:132)\n\tat org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:186)\n\tat org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:959)\n\tat org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:427)\n\tat org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:396)\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:250)\n\tat org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:950)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:380)\n\tat py4j.Gateway.invoke(Gateway.java:295)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:251)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 63.0 failed 4 times, most recent failure: Lost task 0.3 in stage 63.0 (TID 77) (10.139.64.4 executor driver): org.apache.spark.SparkException: Task failed while writing rows.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:610)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.executeTask(FileFormatWriter.scala:457)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$write$20(FileFormatWriter.scala:336)\n\tat org.apache.spark.scheduler.ResultTask.$anonfun$runTask$3(ResultTask.scala:75)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.ResultTask.$anonfun$runTask$1(ResultTask.scala:75)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:55)\n\tat org.apache.spark.scheduler.Task.doRunTask(Task.scala:156)\n\tat org.apache.spark.scheduler.Task.$anonfun$run$1(Task.scala:125)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:95)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$13(Executor.scala:832)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1681)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:835)\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:690)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: com.databricks.sql.io.FileReadException: Error while reading file dbfs:/FileStore/tables/countries_out/part-00000-tid-3926611488193324740-d29d1b69-7e45-4d05-9a52-aefa8dc24e97-43-1-c000.csv. It is possible the underlying files have been updated. You can explicitly invalidate the cache in Spark by running &#39;REFRESH TABLE tableName&#39; command in SQL or by recreating the Dataset/DataFrame involved. If Delta cache is stale or the underlying files have been removed, you can invalidate Delta cache manually by restarting the cluster.\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.logFileNameAndThrow(FileScanRDD.scala:521)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.getNext(FileScanRDD.scala:473)\n\tat org.apache.spark.util.NextIterator.hasNext(NextIterator.scala:73)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:614)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.$anonfun$hasNext$1(FileScanRDD.scala:356)\n\tat scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:351)\n\tat scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)\n\tat scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)\n\tat org.apache.spark.sql.execution.UnsafeExternalRowSorter.sort(UnsafeExternalRowSorter.java:240)\n\tat org.apache.spark.sql.execution.SortExec$$anon$2.sortedIterator(SortExec.scala:133)\n\tat org.apache.spark.sql.execution.SortExec$$anon$2.hasNext(SortExec.scala:147)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:90)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$executeTask$2(FileFormatWriter.scala:437)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1715)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.executeTask(FileFormatWriter.scala:444)\n\t... 19 more\nCaused by: java.io.FileNotFoundException: /7588025375838496/FileStore/tables/countries_out/part-00000-tid-3926611488193324740-d29d1b69-7e45-4d05-9a52-aefa8dc24e97-43-1-c000.csv\n\tat shaded.databricks.org.apache.hadoop.fs.azure.NativeAzureFileSystem.open(NativeAzureFileSystem.java:2967)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.$anonfun$open$2(DatabricksFileSystemV2.scala:577)\n\tat com.databricks.s3a.S3AExceptionUtils$.convertAWSExceptionToJavaIOException(DatabricksStreamUtils.scala:66)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.$anonfun$open$1(DatabricksFileSystemV2.scala:575)\n\tat com.databricks.logging.UsageLogging.$anonfun$recordOperation$1(UsageLogging.scala:330)\n\tat com.databricks.logging.UsageLogging.executeThunkAndCaptureResultTags$1(UsageLogging.scala:424)\n\tat com.databricks.logging.UsageLogging.$anonfun$recordOperationWithResultTags$4(UsageLogging.scala:444)\n\tat com.databricks.logging.Log4jUsageLoggingShim$.$anonfun$withAttributionContext$1(Log4jUsageLoggingShim.scala:33)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)\n\tat com.databricks.logging.AttributionContext$.withValue(AttributionContext.scala:94)\n\tat com.databricks.logging.Log4jUsageLoggingShim$.withAttributionContext(Log4jUsageLoggingShim.scala:31)\n\tat com.databricks.logging.UsageLogging.withAttributionContext(UsageLogging.scala:205)\n\tat com.databricks.logging.UsageLogging.withAttributionContext$(UsageLogging.scala:204)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.withAttributionContext(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.withAttributionTags(UsageLogging.scala:240)\n\tat com.databricks.logging.UsageLogging.withAttributionTags$(UsageLogging.scala:225)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.withAttributionTags(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.recordOperationWithResultTags(UsageLogging.scala:419)\n\tat com.databricks.logging.UsageLogging.recordOperationWithResultTags$(UsageLogging.scala:339)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.recordOperationWithResultTags(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.recordOperation(UsageLogging.scala:330)\n\tat com.databricks.logging.UsageLogging.recordOperation$(UsageLogging.scala:302)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.recordOperation(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.open(DatabricksFileSystemV2.scala:575)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystem.open(DatabricksFileSystem.scala:87)\n\tat com.databricks.spark.metrics.FileSystemWithMetrics.open(FileSystemWithMetrics.scala:336)\n\tat org.apache.hadoop.fs.FileSystem.lambda$openFileWithOptions$0(FileSystem.java:4633)\n\tat org.apache.hadoop.util.LambdaUtils.eval(LambdaUtils.java:52)\n\tat org.apache.hadoop.fs.FileSystem.openFileWithOptions(FileSystem.java:4631)\n\tat org.apache.hadoop.fs.FileSystem$FSDataInputStreamBuilder.build(FileSystem.java:4768)\n\tat org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:92)\n\tat org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.&lt;init&gt;(HadoopFileLinesReader.scala:65)\n\tat org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource.readFile(CSVDataSource.scala:108)\n\tat org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$4(CSVFileFormat.scala:167)\n\tat org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:157)\n\tat org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:144)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.getNext(FileScanRDD.scala:457)\n\t... 34 more\n\nDriver stacktrace:\n\tat org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:3029)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2976)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2970)\n\tat scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)\n\tat scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2970)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1390)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1390)\n\tat scala.Option.foreach(Option.scala:407)\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1390)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3238)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:3179)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:3167)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)\n\tat org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:1152)\n\tat org.apache.spark.SparkContext.runJobInternal(SparkContext.scala:2651)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2634)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:325)\n\t... 44 more\nCaused by: org.apache.spark.SparkException: Task failed while writing rows.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:610)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.executeTask(FileFormatWriter.scala:457)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$write$20(FileFormatWriter.scala:336)\n\tat org.apache.spark.scheduler.ResultTask.$anonfun$runTask$3(ResultTask.scala:75)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.ResultTask.$anonfun$runTask$1(ResultTask.scala:75)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:55)\n\tat org.apache.spark.scheduler.Task.doRunTask(Task.scala:156)\n\tat org.apache.spark.scheduler.Task.$anonfun$run$1(Task.scala:125)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:95)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$13(Executor.scala:832)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1681)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:835)\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:690)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\t... 1 more\nCaused by: com.databricks.sql.io.FileReadException: Error while reading file dbfs:/FileStore/tables/countries_out/part-00000-tid-3926611488193324740-d29d1b69-7e45-4d05-9a52-aefa8dc24e97-43-1-c000.csv. It is possible the underlying files have been updated. You can explicitly invalidate the cache in Spark by running &#39;REFRESH TABLE tableName&#39; command in SQL or by recreating the Dataset/DataFrame involved. If Delta cache is stale or the underlying files have been removed, you can invalidate Delta cache manually by restarting the cluster.\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.logFileNameAndThrow(FileScanRDD.scala:521)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.getNext(FileScanRDD.scala:473)\n\tat org.apache.spark.util.NextIterator.hasNext(NextIterator.scala:73)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:614)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.$anonfun$hasNext$1(FileScanRDD.scala:356)\n\tat scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)\n\tat com.databricks.spark.util.ExecutorFrameProfiler$.record(ExecutorFrameProfiler.scala:110)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:351)\n\tat scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)\n\tat scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)\n\tat org.apache.spark.sql.execution.UnsafeExternalRowSorter.sort(UnsafeExternalRowSorter.java:240)\n\tat org.apache.spark.sql.execution.SortExec$$anon$2.sortedIterator(SortExec.scala:133)\n\tat org.apache.spark.sql.execution.SortExec$$anon$2.hasNext(SortExec.scala:147)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:90)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$executeTask$2(FileFormatWriter.scala:437)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1715)\n\tat org.apache.spark.sql.execution.datasources.FileFormatWriter$.executeTask(FileFormatWriter.scala:444)\n\t... 19 more\nCaused by: java.io.FileNotFoundException: /7588025375838496/FileStore/tables/countries_out/part-00000-tid-3926611488193324740-d29d1b69-7e45-4d05-9a52-aefa8dc24e97-43-1-c000.csv\n\tat shaded.databricks.org.apache.hadoop.fs.azure.NativeAzureFileSystem.open(NativeAzureFileSystem.java:2967)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.$anonfun$open$2(DatabricksFileSystemV2.scala:577)\n\tat com.databricks.s3a.S3AExceptionUtils$.convertAWSExceptionToJavaIOException(DatabricksStreamUtils.scala:66)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.$anonfun$open$1(DatabricksFileSystemV2.scala:575)\n\tat com.databricks.logging.UsageLogging.$anonfun$recordOperation$1(UsageLogging.scala:330)\n\tat com.databricks.logging.UsageLogging.executeThunkAndCaptureResultTags$1(UsageLogging.scala:424)\n\tat com.databricks.logging.UsageLogging.$anonfun$recordOperationWithResultTags$4(UsageLogging.scala:444)\n\tat com.databricks.logging.Log4jUsageLoggingShim$.$anonfun$withAttributionContext$1(Log4jUsageLoggingShim.scala:33)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)\n\tat com.databricks.logging.AttributionContext$.withValue(AttributionContext.scala:94)\n\tat com.databricks.logging.Log4jUsageLoggingShim$.withAttributionContext(Log4jUsageLoggingShim.scala:31)\n\tat com.databricks.logging.UsageLogging.withAttributionContext(UsageLogging.scala:205)\n\tat com.databricks.logging.UsageLogging.withAttributionContext$(UsageLogging.scala:204)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.withAttributionContext(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.withAttributionTags(UsageLogging.scala:240)\n\tat com.databricks.logging.UsageLogging.withAttributionTags$(UsageLogging.scala:225)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.withAttributionTags(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.recordOperationWithResultTags(UsageLogging.scala:419)\n\tat com.databricks.logging.UsageLogging.recordOperationWithResultTags$(UsageLogging.scala:339)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.recordOperationWithResultTags(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.logging.UsageLogging.recordOperation(UsageLogging.scala:330)\n\tat com.databricks.logging.UsageLogging.recordOperation$(UsageLogging.scala:302)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.recordOperation(DatabricksFileSystemV2.scala:510)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV2.open(DatabricksFileSystemV2.scala:575)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystem.open(DatabricksFileSystem.scala:87)\n\tat com.databricks.spark.metrics.FileSystemWithMetrics.open(FileSystemWithMetrics.scala:336)\n\tat org.apache.hadoop.fs.FileSystem.lambda$openFileWithOptions$0(FileSystem.java:4633)\n\tat org.apache.hadoop.util.LambdaUtils.eval(LambdaUtils.java:52)\n\tat org.apache.hadoop.fs.FileSystem.openFileWithOptions(FileSystem.java:4631)\n\tat org.apache.hadoop.fs.FileSystem$FSDataInputStreamBuilder.build(FileSystem.java:4768)\n\tat org.apache.hadoop.mapreduce.lib.input.LineRecordReader.initialize(LineRecordReader.java:92)\n\tat org.apache.spark.sql.execution.datasources.HadoopFileLinesReader.&lt;init&gt;(HadoopFileLinesReader.scala:65)\n\tat org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource.readFile(CSVDataSource.scala:108)\n\tat org.apache.spark.sql.execution.datasources.csv.CSVFileFormat.$anonfun$buildReader$4(CSVFileFormat.scala:167)\n\tat org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:157)\n\tat org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:144)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1$$anon$2.getNext(FileScanRDD.scala:457)\n\t... 34 more\n</div>","errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1663756134097,"submitTime":1663756134097,"finishTime":1663756135018,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"e480d6a8-2d4b-4570-88f3-84503787f3f1"}],"dashboards":[],"guid":"dc5ddbf8-afa9-4a7c-a64e-937a5e458fc6","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{"pythonIndentUnit":4},"reposExportFormat":"SOURCE"}