{"version":"NotebookV1","origId":3603969348519957,"name":"15 Union","language":"python","commands":[{"version":"CommandV1","origId":3603969348519958,"guid":"7923f869-718b-4e14-a291-0520f41e2b43","subtype":"command","commandType":"auto","position":0.5,"command":"%md\n# Union\n\n#### Resources:\n* union: https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.DataFrame.union.html?highlight=union#pyspark.sql.DataFrame.union","commandVersion":14,"state":"input","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"0f8eee1f-40b9-444c-811b-3bfff0e96dea"},{"version":"CommandV1","origId":3603969348519959,"guid":"11d7c0f9-de2c-49e5-9b7d-a63be4feb6d8","subtype":"command","commandType":"auto","position":1.0,"command":"# Reading in the countries csv file\ncountries_path = '/FileStore/tables/countries.csv'\n \nfrom pyspark.sql.types import IntegerType, StringType, DoubleType, StructField, StructType\ncountries_schema = StructType([\n                    StructField(\"COUNTRY_ID\", IntegerType(), False),\n                    StructField(\"NAME\", StringType(), False),\n                    StructField(\"NATIONALITY\", StringType(), False),\n                    StructField(\"COUNTRY_CODE\", StringType(), False),\n                    StructField(\"ISO_ALPHA2\", StringType(), False),\n                    StructField(\"CAPITAL\", StringType(), False),\n                    StructField(\"POPULATION\", DoubleType(), False),\n                    StructField(\"AREA_KM2\", IntegerType(), False),\n                    StructField(\"REGION_ID\", IntegerType(), True),\n                    StructField(\"SUB_REGION_ID\", IntegerType(), True),\n                    StructField(\"INTERMEDIATE_REGION_ID\", IntegerType(), True),\n                    StructField(\"ORGANIZATION_REGION_ID\", IntegerType(), True)\n                    ]\n                    )\n \ncountries=spark.read.csv(path=countries_path, header=True, schema=countries_schema)","commandVersion":8,"state":"finished","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"countries","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"COUNTRY_ID","nullable":true,"type":"integer"},{"metadata":{},"name":"NAME","nullable":true,"type":"string"},{"metadata":{},"name":"NATIONALITY","nullable":true,"type":"string"},{"metadata":{},"name":"COUNTRY_CODE","nullable":true,"type":"string"},{"metadata":{},"name":"ISO_ALPHA2","nullable":true,"type":"string"},{"metadata":{},"name":"CAPITAL","nullable":true,"type":"string"},{"metadata":{},"name":"POPULATION","nullable":true,"type":"double"},{"metadata":{},"name":"AREA_KM2","nullable":true,"type":"integer"},{"metadata":{},"name":"REGION_ID","nullable":true,"type":"integer"},{"metadata":{},"name":"SUB_REGION_ID","nullable":true,"type":"integer"},{"metadata":{},"name":"INTERMEDIATE_REGION_ID","nullable":true,"type":"integer"},{"metadata":{},"name":"ORGANIZATION_REGION_ID","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1665829874224,"submitTime":1665829874179,"finishTime":1665829874428,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"b09f671b-0fff-4151-be82-d063ce50c964"},{"version":"CommandV1","origId":3603969348519960,"guid":"068733a0-5017-4736-afd6-6511d97aa22c","subtype":"command","commandType":"auto","position":2.0,"command":"# Importing the count method and counting the number of records in the countries dataframe\nfrom pyspark.sql.functions import count\ncountries.count()","commandVersion":23,"state":"finished","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\">Out[2]: 249</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1665829905614,"submitTime":1665829905575,"finishTime":1665829906054,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",38]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"e296f975-4a52-42b9-b7ec-1fad943aed1b"},{"version":"CommandV1","origId":3603969348519961,"guid":"e4bdc234-f440-4aba-b792-b5c7684f5500","subtype":"command","commandType":"auto","position":3.0,"command":"# Performing a self union\ncountries.union(countries).count()","commandVersion":13,"state":"finished","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\">Out[4]: 498</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1665829945792,"submitTime":1665829945381,"finishTime":1665829946323,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",38]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"4748fd2f-c774-4c2c-b635-8be6ed3d2358"},{"version":"CommandV1","origId":3603969348519962,"guid":"370d4165-4901-4c3b-aaee-cdc9171b1af0","subtype":"command","commandType":"auto","position":4.0,"command":"# Union only works with tables containing the same number of columns\ncountries.union(countries.drop('region_id'))","commandVersion":20,"state":"error","results":{"type":"listResults","data":[{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}}],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"<span class=\"ansi-red-fg\">AnalysisException</span>: Union can only be performed on tables with the same number of columns, but the first table has 12 columns and the second table has 11 columns;","errorTraceType":"html","error":"<div class=\"ansiout\"><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AnalysisException</span>                         Traceback (most recent call last)\n<span class=\"ansi-green-fg\">&lt;command-3366272907801632&gt;</span> in <span class=\"ansi-cyan-fg\">&lt;module&gt;</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span><span class=\"ansi-red-fg\"> </span>countries<span class=\"ansi-blue-fg\">.</span>union<span class=\"ansi-blue-fg\">(</span>countries<span class=\"ansi-blue-fg\">.</span>drop<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#39;region_id&#39;</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">)</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/pyspark/sql/dataframe.py</span> in <span class=\"ansi-cyan-fg\">union</span><span class=\"ansi-blue-fg\">(self, other)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   1983</span>         Also <span class=\"ansi-green-fg\">as</span> standard <span class=\"ansi-green-fg\">in</span> SQL<span class=\"ansi-blue-fg\">,</span> this function resolves columns by position <span class=\"ansi-blue-fg\">(</span><span class=\"ansi-green-fg\">not</span> by name<span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">.</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   1984</span>         &#34;&#34;&#34;\n<span class=\"ansi-green-fg\">-&gt; 1985</span><span class=\"ansi-red-fg\">         </span><span class=\"ansi-green-fg\">return</span> DataFrame<span class=\"ansi-blue-fg\">(</span>self<span class=\"ansi-blue-fg\">.</span>_jdf<span class=\"ansi-blue-fg\">.</span>union<span class=\"ansi-blue-fg\">(</span>other<span class=\"ansi-blue-fg\">.</span>_jdf<span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">,</span> self<span class=\"ansi-blue-fg\">.</span>sql_ctx<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   1986</span> \n<span class=\"ansi-green-intense-fg ansi-bold\">   1987</span>     <span class=\"ansi-blue-fg\">@</span>since<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-cyan-fg\">1.3</span><span class=\"ansi-blue-fg\">)</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/lib/py4j-0.10.9.1-src.zip/py4j/java_gateway.py</span> in <span class=\"ansi-cyan-fg\">__call__</span><span class=\"ansi-blue-fg\">(self, *args)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   1302</span> \n<span class=\"ansi-green-intense-fg ansi-bold\">   1303</span>         answer <span class=\"ansi-blue-fg\">=</span> self<span class=\"ansi-blue-fg\">.</span>gateway_client<span class=\"ansi-blue-fg\">.</span>send_command<span class=\"ansi-blue-fg\">(</span>command<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-fg\">-&gt; 1304</span><span class=\"ansi-red-fg\">         return_value = get_return_value(\n</span><span class=\"ansi-green-intense-fg ansi-bold\">   1305</span>             answer, self.gateway_client, self.target_id, self.name)\n<span class=\"ansi-green-intense-fg ansi-bold\">   1306</span> \n\n<span class=\"ansi-green-fg\">/databricks/spark/python/pyspark/sql/utils.py</span> in <span class=\"ansi-cyan-fg\">deco</span><span class=\"ansi-blue-fg\">(*a, **kw)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    121</span>                 <span class=\"ansi-red-fg\"># Hide where the exception came from that shows a non-Pythonic</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    122</span>                 <span class=\"ansi-red-fg\"># JVM exception message.</span>\n<span class=\"ansi-green-fg\">--&gt; 123</span><span class=\"ansi-red-fg\">                 </span><span class=\"ansi-green-fg\">raise</span> converted <span class=\"ansi-green-fg\">from</span> <span class=\"ansi-green-fg\">None</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    124</span>             <span class=\"ansi-green-fg\">else</span><span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    125</span>                 <span class=\"ansi-green-fg\">raise</span>\n\n<span class=\"ansi-red-fg\">AnalysisException</span>: Union can only be performed on tables with the same number of columns, but the first table has 12 columns and the second table has 11 columns;\n&#39;Union false, false\n:- Relation [COUNTRY_ID#1270,NAME#1271,NATIONALITY#1272,COUNTRY_CODE#1273,ISO_ALPHA2#1274,CAPITAL#1275,POPULATION#1276,AREA_KM2#1277,REGION_ID#1278,SUB_REGION_ID#1279,INTERMEDIATE_REGION_ID#1280,ORGANIZATION_REGION_ID#1281] csv\n+- Project [COUNTRY_ID#1437, NAME#1438, NATIONALITY#1439, COUNTRY_CODE#1440, ISO_ALPHA2#1441, CAPITAL#1442, POPULATION#1443, AREA_KM2#1444, SUB_REGION_ID#1446, INTERMEDIATE_REGION_ID#1447, ORGANIZATION_REGION_ID#1448]\n   +- Relation [COUNTRY_ID#1437,NAME#1438,NATIONALITY#1439,COUNTRY_CODE#1440,ISO_ALPHA2#1441,CAPITAL#1442,POPULATION#1443,AREA_KM2#1444,REGION_ID#1445,SUB_REGION_ID#1446,INTERMEDIATE_REGION_ID#1447,ORGANIZATION_REGION_ID#1448] csv\n</div>","errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1665829978936,"submitTime":1665829978936,"finishTime":1665829979219,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"e652644b-38fb-4fcb-a99e-a516b93db4a4"}],"dashboards":[],"guid":"4ed0479c-9ee9-43b1-8ec3-c4267a228d06","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{"pythonIndentUnit":4},"reposExportFormat":"SOURCE"}